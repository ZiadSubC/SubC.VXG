android/media/cts/OutputSurface = Android.Media.Cts.OutputSurface
  <init>()V = .ctor()
  getSurface()Landroid/view/Surface; = Surface
  getSurfaceTexture()Landroid/graphics/SurfaceTexture; = SurfaceTexture
  getTextureId()I = TextureId
  awaitNewImage()Z = AwaitNewImage()
  drawImage()V = DrawImage()
  release()V = Release()
android/media/cts/OutputSurface16 = Android.Media.Cts.OutputSurface16
  <init>()V = .ctor()
  <init>(II)V = .ctor(int, int)
  LOG_LEVEL = LogLevel
  getSurface()Landroid/view/Surface; = Surface
  getSurfaceTexture()Landroid/graphics/SurfaceTexture; = SurfaceTexture
  getTextureId()I = TextureId
  awaitNewImage()Z = AwaitNewImage()
  changeFragmentShader(Ljava/lang/String;)V = ChangeFragmentShader(string)
  drawImage()V = DrawImage()
  makeCurrent()V = MakeCurrent()
  onFrameAvailable(Landroid/graphics/SurfaceTexture;)V = OnFrameAvailable(Android.Graphics.SurfaceTexture)
  release()V = Release()
android/media/cts/OutputSurface18 = Android.Media.Cts.OutputSurface18
  <init>()V = .ctor()
  <init>(II)V = .ctor(int, int)
  LOG_LEVEL = LogLevel
  getSurface()Landroid/view/Surface; = Surface
  getSurfaceTexture()Landroid/graphics/SurfaceTexture; = SurfaceTexture
  getTextureId()I = TextureId
  awaitNewImage()Z = AwaitNewImage()
  changeFragmentShader(Ljava/lang/String;)V = ChangeFragmentShader(string)
  checkForNewImage(I)Z = CheckForNewImage(int)
  drawImage()V = DrawImage()
  makeCurrent()V = MakeCurrent()
  onFrameAvailable(Landroid/graphics/SurfaceTexture;)V = OnFrameAvailable(Android.Graphics.SurfaceTexture)
  release()V = Release()
au/notzed/jjmpeg/AVCodec = AU.Notzed.Jjmpeg.AVCodec
  getName()Ljava/lang/String; = Name
  dispose()V = Dispose()
  findDecoder(I)Lau/notzed/jjmpeg/AVCodec; = FindDecoder(int)
  findEncoder(I)Lau/notzed/jjmpeg/AVCodec; = FindEncoder(int)
  findEncoderByName(Ljava/lang/String;)Lau/notzed/jjmpeg/AVCodec; = FindEncoderByName(string)
au/notzed/jjmpeg/AVCodecContext = AU.Notzed.Jjmpeg.AVCodecContext
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  AVCODEC_MAX_AUDIO_FRAME_SIZE = AvcodecMaxAudioFrameSize
  AVMEDIA_TYPE_ATTACHMENT = AvmediaTypeAttachment
  AVMEDIA_TYPE_AUDIO = AvmediaTypeAudio
  AVMEDIA_TYPE_DATA = AvmediaTypeData
  AVMEDIA_TYPE_NB = AvmediaTypeNb
  AVMEDIA_TYPE_SUBTITLE = AvmediaTypeSubtitle
  AVMEDIA_TYPE_UNKNOWN = AvmediaTypeUnknown
  AVMEDIA_TYPE_VIDEO = AvmediaTypeVideo
  AV_NOPTS_VALUE = AvNoptsValue
  AV_TIME_BASE = AvTimeBase
  CODEC_FLAG2_8X8DCT = CodecFlag28x8dct
  CODEC_FLAG2_AUD = CodecFlag2Aud
  CODEC_FLAG2_BIT_RESERVOIR = CodecFlag2BitReservoir
  CODEC_FLAG2_BPYRAMID = CodecFlag2Bpyramid
  CODEC_FLAG2_BRDO = CodecFlag2Brdo
  CODEC_FLAG2_CHUNKS = CodecFlag2Chunks
  CODEC_FLAG2_DROP_FRAME_TIMECODE = CodecFlag2DropFrameTimecode
  CODEC_FLAG2_FAST = CodecFlag2Fast
  CODEC_FLAG2_FASTPSKIP = CodecFlag2Fastpskip
  CODEC_FLAG2_INTRA_REFRESH = CodecFlag2IntraRefresh
  CODEC_FLAG2_INTRA_VLC = CodecFlag2IntraVlc
  CODEC_FLAG2_LOCAL_HEADER = CodecFlag2LocalHeader
  CODEC_FLAG2_MBTREE = CodecFlag2Mbtree
  CODEC_FLAG2_MEMC_ONLY = CodecFlag2MemcOnly
  CODEC_FLAG2_MIXED_REFS = CodecFlag2MixedRefs
  CODEC_FLAG2_NON_LINEAR_QUANT = CodecFlag2NonLinearQuant
  CODEC_FLAG2_NO_OUTPUT = CodecFlag2NoOutput
  CODEC_FLAG2_PSY = CodecFlag2Psy
  CODEC_FLAG2_SKIP_RD = CodecFlag2SkipRd
  CODEC_FLAG2_SSIM = CodecFlag2Ssim
  CODEC_FLAG2_STRICT_GOP = CodecFlag2StrictGop
  CODEC_FLAG2_WPRED = CodecFlag2Wpred
  CODEC_FLAG_4MV = CodecFlag4mv
  CODEC_FLAG_AC_PRED = CodecFlagAcPred
  CODEC_FLAG_ALT_SCAN = CodecFlagAltScan
  CODEC_FLAG_BITEXACT = CodecFlagBitexact
  CODEC_FLAG_CBP_RD = CodecFlagCbpRd
  CODEC_FLAG_CLOSED_GOP = CodecFlagClosedGop
  CODEC_FLAG_EMU_EDGE = CodecFlagEmuEdge
  CODEC_FLAG_EXTERN_HUFF = CodecFlagExternHuff
  CODEC_FLAG_GLOBAL_HEADER = CodecFlagGlobalHeader
  CODEC_FLAG_GMC = CodecFlagGmc
  CODEC_FLAG_GRAY = CodecFlagGray
  CODEC_FLAG_H263P_AIV = CodecFlagH263pAiv
  CODEC_FLAG_H263P_SLICE_STRUCT = CodecFlagH263pSliceStruct
  CODEC_FLAG_H263P_UMV = CodecFlagH263pUmv
  CODEC_FLAG_INPUT_PRESERVED = CodecFlagInputPreserved
  CODEC_FLAG_INTERLACED_DCT = CodecFlagInterlacedDct
  CODEC_FLAG_INTERLACED_ME = CodecFlagInterlacedMe
  CODEC_FLAG_LOOP_FILTER = CodecFlagLoopFilter
  CODEC_FLAG_LOW_DELAY = CodecFlagLowDelay
  CODEC_FLAG_MV0 = CodecFlagMv0
  CODEC_FLAG_NORMALIZE_AQP = CodecFlagNormalizeAqp
  CODEC_FLAG_OBMC = CodecFlagObmc
  CODEC_FLAG_PART = CodecFlagPart
  CODEC_FLAG_PASS1 = CodecFlagPass1
  CODEC_FLAG_PASS2 = CodecFlagPass2
  CODEC_FLAG_PSNR = CodecFlagPsnr
  CODEC_FLAG_QPEL = CodecFlagQpel
  CODEC_FLAG_QP_RD = CodecFlagQpRd
  CODEC_FLAG_QSCALE = CodecFlagQscale
  CODEC_FLAG_SVCD_SCAN_OFFSET = CodecFlagSvcdScanOffset
  FF_MB_DECISION_BITS = FfMbDecisionBits
  FF_MB_DECISION_RD = FfMbDecisionRd
  FF_MB_DECISION_SIMPLE = FfMbDecisionSimple
  FF_MIN_BUFFER_SIZE = FfMinBufferSize
  getBitRate()I = BitRate
  setBitRate(I)V = BitRate
  getChannelLayout()J = ChannelLayout
  setChannelLayout(J)V = ChannelLayout
  getChannels()I = Channels
  setChannels(I)V = Channels
  getCodecID()I = CodecID
  setCodecID(I)V = CodecID
  getCodecType()I = CodecType
  setCodecType(I)V = CodecType
  getCodedFrame()Lau/notzed/jjmpeg/AVFrame; = CodedFrame
  getCodedHeight()I = CodedHeight
  setCodedHeight(I)V = CodedHeight
  getCodedWidth()I = CodedWidth
  setCodedWidth(I)V = CodedWidth
  getErrorConcealment()I = ErrorConcealment
  setErrorConcealment(I)V = ErrorConcealment
  getFlags()I = Flags
  setFlags(I)V = Flags
  getFrameNumber()I = FrameNumber
  getFrameSize()I = FrameSize
  setFrameSize(I)V = FrameSize
  getGOPSize()I = GOPSize
  setGOPSize(I)V = GOPSize
  getHeight()I = Height
  setHeight(I)V = Height
  getIdctAlgo()I = IdctAlgo
  setIdctAlgo(I)V = IdctAlgo
  getLowres()I = Lowres
  setLowres(I)V = Lowres
  getMaxBFrames()I = MaxBFrames
  setMaxBFrames(I)V = MaxBFrames
  getMbDecision()I = MbDecision
  setMbDecision(I)V = MbDecision
  getPixFmt()Lau/notzed/jjmpeg/PixelFormat; = PixFmt
  setPixFmt(Lau/notzed/jjmpeg/PixelFormat;)V = PixFmt
  getSampleFmt()Lau/notzed/jjmpeg/SampleFormat; = SampleFmt
  setSampleFmt(Lau/notzed/jjmpeg/SampleFormat;)V = SampleFmt
  getSampleRate()I = SampleRate
  setSampleRate(I)V = SampleRate
  getSkipFrame()I = SkipFrame
  setSkipFrame(I)V = SkipFrame
  getStrictStdCompliance()I = StrictStdCompliance
  setStrictStdCompliance(I)V = StrictStdCompliance
  getThreadCount()I = ThreadCount
  setThreadCount(I)V = ThreadCount
  getTimeBase()Lau/notzed/jjmpeg/AVRational; = TimeBase
  getTimeBaseDen()I = TimeBaseDen
  setTimeBaseDen(I)V = TimeBaseDen
  getTimeBaseNum()I = TimeBaseNum
  setTimeBaseNum(I)V = TimeBaseNum
  getWidth()I = Width
  setWidth(I)V = Width
  allocContext()Lau/notzed/jjmpeg/AVCodecContext; = AllocContext()
  allocContext3(Lau/notzed/jjmpeg/AVCodec;)Lau/notzed/jjmpeg/AVCodecContext; = AllocContext3(AU.Notzed.Jjmpeg.AVCodec)
  close()I = Close()
  create()Lau/notzed/jjmpeg/AVCodecContext; = Create()
  create3(Lau/notzed/jjmpeg/AVCodec;)Lau/notzed/jjmpeg/AVCodecContext; = Create3(AU.Notzed.Jjmpeg.AVCodec)
  debug()V = Debug()
  decodeAudio(Lau/notzed/jjmpeg/AVFrame;Lau/notzed/jjmpeg/AVPacket;)I = DecodeAudio(AU.Notzed.Jjmpeg.AVFrame, AU.Notzed.Jjmpeg.AVPacket)
  decodeAudio(Lau/notzed/jjmpeg/AVSamples;Lau/notzed/jjmpeg/AVPacket;)I = DecodeAudio(AU.Notzed.Jjmpeg.AVSamples, AU.Notzed.Jjmpeg.AVPacket)
  decodeVideo(Lau/notzed/jjmpeg/AVFrame;Lau/notzed/jjmpeg/AVPacket;)Z = DecodeVideo(AU.Notzed.Jjmpeg.AVFrame, AU.Notzed.Jjmpeg.AVPacket)
  dispose()V = Dispose()
  encodeAudio(Ljava/nio/ByteBuffer;Lau/notzed/jjmpeg/AVSamples;)I = EncodeAudio(Java.Nio.ByteBuffer, AU.Notzed.Jjmpeg.AVSamples)
  encodeAudio(Ljava/nio/ByteBuffer;ILjava/nio/ShortBuffer;)I = EncodeAudio(Java.Nio.ByteBuffer, int, Java.Nio.ShortBuffer)
  encodeVideo(Ljava/nio/ByteBuffer;Lau/notzed/jjmpeg/AVFrame;)I = EncodeVideo(Java.Nio.ByteBuffer, AU.Notzed.Jjmpeg.AVFrame)
  encodeVideo(Ljava/nio/ByteBuffer;ILau/notzed/jjmpeg/AVFrame;)I = EncodeVideo(Java.Nio.ByteBuffer, int, AU.Notzed.Jjmpeg.AVFrame)
  flushBuffers()V = FlushBuffers()
  open(Lau/notzed/jjmpeg/AVCodec;)V = Open(AU.Notzed.Jjmpeg.AVCodec)
  setExtradata(Ljava/nio/ByteBuffer;)V = SetExtradata(Java.Nio.ByteBuffer)
au/notzed/jjmpeg/AVDictionary = AU.Notzed.Jjmpeg.AVDictionary
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  dispose()V = Dispose()
au/notzed/jjmpeg/AVFormat = AU.Notzed.Jjmpeg.IAVFormat
  AVFMT_ALLOW_FLUSH = AvfmtAllowFlush
  AVFMT_GENERIC_INDEX = AvfmtGenericIndex
  AVFMT_GLOBALHEADER = AvfmtGlobalheader
  AVFMT_NEEDNUMBER = AvfmtNeednumber
  AVFMT_NOBINSEARCH = AvfmtNobinsearch
  AVFMT_NO_BYTE_SEEK = AvfmtNoByteSeek
  AVFMT_NODIMENSIONS = AvfmtNodimensions
  AVFMT_NOFILE = AvfmtNofile
  AVFMT_NOGENSEARCH = AvfmtNogensearch
  AVFMT_NOSTREAMS = AvfmtNostreams
  AVFMT_NOTIMESTAMPS = AvfmtNotimestamps
  AVFMT_RAWPICTURE = AvfmtRawpicture
  AVFMT_SHOW_IDS = AvfmtShowIds
  AVFMT_TS_DISCONT = AvfmtTsDiscont
  AVFMT_TS_NONSTRICT = AvfmtTsNonstrict
  AVFMT_VARIABLE_FPS = AvfmtVariableFps
au/notzed/jjmpeg/AVFormatContext = AU.Notzed.Jjmpeg.AVFormatContext
  AVSEEK_FLAG_ANY = AvseekFlagAny
  AVSEEK_FLAG_BACKWARD = AvseekFlagBackward
  AVSEEK_FLAG_BYTE = AvseekFlagByte
  AVSEEK_FLAG_FRAME = AvseekFlagFrame
  getBitRate()I = BitRate
  getDuration()J = Duration
  getFlags()I = Flags
  setFlags(I)V = Flags
  getInputFormat()Lau/notzed/jjmpeg/AVInputFormat; = InputFormat
  setInputFormat(Lau/notzed/jjmpeg/AVInputFormat;)V = InputFormat
  getIOContext()Lau/notzed/jjmpeg/AVIOContext; = IOContext
  setIOContext(Lau/notzed/jjmpeg/AVIOContext;)V = IOContext
  getNBStreams()I = NBStreams
  getOutputFormat()Lau/notzed/jjmpeg/AVOutputFormat; = OutputFormat
  setOutputFormat(Lau/notzed/jjmpeg/AVOutputFormat;)V = OutputFormat
  getStartTime()J = StartTime
  allocContext()Lau/notzed/jjmpeg/AVFormatContext; = AllocContext()
  allocContext2(Ljava/lang/String;Ljava/lang/String;)Lau/notzed/jjmpeg/AVFormatContext; = AllocContext2(string, string)
  closeInput()V = CloseInput()
  dispose()V = Dispose()
  findStreamInfo()V = FindStreamInfo()
  findStreamInfo([Lau/notzed/jjmpeg/AVDictionary;)V = FindStreamInfo(AU.Notzed.Jjmpeg.AVDictionary[])
  freeContext()V = FreeContext()
  getRTSPBitRate(I)I = GetRTSPBitRate(int)
  getRTSPClients(I)[Ljava/lang/String; = GetRTSPClients(int)
  getRTSPFps(I)I = GetRTSPFps(int)
  getStreamAt(I)Lau/notzed/jjmpeg/AVStream; = GetStreamAt(int)
  interleavedWriteFrame(Lau/notzed/jjmpeg/AVPacket;)I = InterleavedWriteFrame(AU.Notzed.Jjmpeg.AVPacket)
  networkInit()I = NetworkInit()
  newStream(Lau/notzed/jjmpeg/AVCodec;)Lau/notzed/jjmpeg/AVStream; = NewStream(AU.Notzed.Jjmpeg.AVCodec)
  open(Ljava/lang/String;)Lau/notzed/jjmpeg/AVFormatContext; = Open(string)
  openInput(Ljava/lang/String;Lau/notzed/jjmpeg/AVInputFormat;)V = OpenInput(string, AU.Notzed.Jjmpeg.AVInputFormat)
  readFrame(Lau/notzed/jjmpeg/AVPacket;)I = ReadFrame(AU.Notzed.Jjmpeg.AVPacket)
  registerAll()V = RegisterAll()
  seekFile(IJJJI)I = SeekFile(int, long, long, long, int)
  seekFrame(IJI)I = SeekFrame(int, long, int)
  setMulticast(ZLjava/lang/String;I)V = SetMulticast(bool, string, int)
  setSecureStreaming(ZLjava/lang/String;Ljava/lang/String;)V = SetSecureStreaming(bool, string, string)
  writeFrame(Lau/notzed/jjmpeg/AVPacket;)I = WriteFrame(AU.Notzed.Jjmpeg.AVPacket)
  writeHeader(Lau/notzed/jjmpeg/AVDictionary;)V = WriteHeader(AU.Notzed.Jjmpeg.AVDictionary)
  writeTrailer()I = WriteTrailer()
au/notzed/jjmpeg/AVFormatParameters = AU.Notzed.Jjmpeg.AVFormatParameters
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  dispose()V = Dispose()
au/notzed/jjmpeg/AVFrame = AU.Notzed.Jjmpeg.AVFrame
  getCodedPictureNumber()I = CodedPictureNumber
  getDisplayPictureNumber()I = DisplayPictureNumber
  isKeyFrame()Z = IsKeyFrame
  getKeyFrame()I = KeyFrame
  getNbSamples()I = NbSamples
  setNbSamples(I)V = NbSamples
  getPTS()J = PTS
  setPTS(J)V = PTS
  alloc(III)I = Alloc(int, int, int)
  copy(Lau/notzed/jjmpeg/AVFrame;Lau/notzed/jjmpeg/PixelFormat;II)V = Copy(AU.Notzed.Jjmpeg.AVFrame, AU.Notzed.Jjmpeg.PixelFormat, int, int)
  create()Lau/notzed/jjmpeg/AVFrame; = Create()
  create(Lau/notzed/jjmpeg/PixelFormat;II)Lau/notzed/jjmpeg/AVFrame; = Create(AU.Notzed.Jjmpeg.PixelFormat, int, int)
  create(Lau/notzed/jjmpeg/SampleFormat;II)Lau/notzed/jjmpeg/AVFrame; = Create(AU.Notzed.Jjmpeg.SampleFormat, int, int)
  dispose()V = Dispose()
  fillAudioFrame(ILau/notzed/jjmpeg/SampleFormat;I)V = FillAudioFrame(int, AU.Notzed.Jjmpeg.SampleFormat, int)
  fillAudioFrame(ILau/notzed/jjmpeg/SampleFormat;Ljava/nio/ByteBuffer;II)I = FillAudioFrame(int, AU.Notzed.Jjmpeg.SampleFormat, Java.Nio.ByteBuffer, int, int)
  free()V = Free()
  get_bitrate_enc()I = Get_bitrate_enc()
  getFrameDefaults()V = GetFrameDefaults()
  getLineSizeAt(I)I = GetLineSizeAt(int)
  getPlaneAt(ILau/notzed/jjmpeg/PixelFormat;II)Lau/notzed/jjmpeg/AVPlane; = GetPlaneAt(int, AU.Notzed.Jjmpeg.PixelFormat, int, int)
  getSamples(Lau/notzed/jjmpeg/SampleFormat;I[S)I = GetSamples(AU.Notzed.Jjmpeg.SampleFormat, int, short[])
  loadTexture2D(Lau/notzed/jjmpeg/PixelFormat;IIZIII)V = LoadTexture2D(AU.Notzed.Jjmpeg.PixelFormat, int, int, bool, int, int, int)
  set_bitrate_enc(I)V = Set_bitrate_enc(int)
au/notzed/jjmpeg/AVInputFormat = AU.Notzed.Jjmpeg.AVInputFormat
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  getFlags()I = Flags
  getLongName()Ljava/lang/String; = LongName
  getName()Ljava/lang/String; = Name
  dispose()V = Dispose()
au/notzed/jjmpeg/AVIOContext = AU.Notzed.Jjmpeg.AVIOContext
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  ALLOC_STREAMED = AllocStreamed
  ALLOC_WRITE = AllocWrite
  AVSEEK_SIZE = AvseekSize
  SEEK_CUR = SeekCur
  SEEK_END = SeekEnd
  SEEK_SET = SeekSet
  URL_RDONLY = UrlRdonly
  URL_RDWR = UrlRdwr
  URL_WRONLY = UrlWronly
  allocContext(II)Lau/notzed/jjmpeg/AVIOContext; = AllocContext(int, int)
  close()I = Close()
  dispose()V = Dispose()
  open(Ljava/lang/String;I)Lau/notzed/jjmpeg/AVIOContext; = Open(string, int)
  probeInput(Ljava/lang/String;II)Lau/notzed/jjmpeg/AVInputFormat; = ProbeInput(string, int, int)
  readPacket(Ljava/nio/ByteBuffer;)I = ReadPacket(Java.Nio.ByteBuffer)
  seek(JI)J = Seek(long, int)
  writePacket(Ljava/nio/ByteBuffer;)I = WritePacket(Java.Nio.ByteBuffer)
au/notzed/jjmpeg/AVMediaType = AU.Notzed.Jjmpeg.AVMediaType
  AVMEDIA_TYPE_ATTACHMENT = AvmediaTypeAttachment
  AVMEDIA_TYPE_AUDIO = AvmediaTypeAudio
  AVMEDIA_TYPE_DATA = AvmediaTypeData
  AVMEDIA_TYPE_NB = AvmediaTypeNb
  AVMEDIA_TYPE_SUBTITLE = AvmediaTypeSubtitle
  AVMEDIA_TYPE_UNKNOWN = AvmediaTypeUnknown
  AVMEDIA_TYPE_VIDEO = AvmediaTypeVideo
  fromC(I)Lau/notzed/jjmpeg/AVMediaType; = FromC(int)
  toC()I = ToC()
  valueOf(Ljava/lang/String;)Lau/notzed/jjmpeg/AVMediaType; = ValueOf(string)
  values()[Lau/notzed/jjmpeg/AVMediaType; = Values()
au/notzed/jjmpeg/AVNative = AU.Notzed.Jjmpeg.AVNative
  <init>(Lau/notzed/jjmpeg/AVObject;)V = .ctor(AU.Notzed.Jjmpeg.AVObject)
  check()V = Check()
  dispose()V = Dispose()
  getVersions()[I = GetVersions()
au/notzed/jjmpeg/AVObject = AU.Notzed.Jjmpeg.AVObject
  <init>()V = .ctor()
  dispose()V = Dispose()
au/notzed/jjmpeg/AVOutputFormat = AU.Notzed.Jjmpeg.AVOutputFormat
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  getAudioCodec()I = AudioCodec
  getExtensions()Ljava/lang/String; = Extensions
  getFlags()I = Flags
  setFlags(I)V = Flags
  getLongName()Ljava/lang/String; = LongName
  getMimeType()Ljava/lang/String; = MimeType
  getName()Ljava/lang/String; = Name
  getSubtitleCodec()I = SubtitleCodec
  getVideoCodec()I = VideoCodec
  dispose()V = Dispose()
  guessFormat(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lau/notzed/jjmpeg/AVOutputFormat; = GuessFormat(string, string, string)
au/notzed/jjmpeg/AVPacket = AU.Notzed.Jjmpeg.AVPacket
  AV_PKT_FLAG_KEY = AvPktFlagKey
  getDTS()J = DTS
  setDTS(J)V = DTS
  getFlags()I = Flags
  setFlags(I)V = Flags
  getPos()J = Pos
  getPTS()J = PTS
  setPTS(J)V = PTS
  getSize()I = Size
  getStreamIndex()I = StreamIndex
  setStreamIndex(I)V = StreamIndex
  consume(I)I = Consume(int)
  create()Lau/notzed/jjmpeg/AVPacket; = Create()
  dispose()V = Dispose()
  dupPacket()I = DupPacket()
  freePacket()V = FreePacket()
  initPacket()V = InitPacket()
  setData(Ljava/nio/ByteBuffer;I)V = SetData(Java.Nio.ByteBuffer, int)
  setSrc(Lau/notzed/jjmpeg/AVPacket;)V = SetSrc(AU.Notzed.Jjmpeg.AVPacket)
au/notzed/jjmpeg/AVPlane = AU.Notzed.Jjmpeg.AVPlane
  <init>(Ljava/nio/ByteBuffer;III)V = .ctor(Java.Nio.ByteBuffer, int, int, int)
  data = Data
  height = Height
  lineSize = LineSize
  width = Width
au/notzed/jjmpeg/AVRational = AU.Notzed.Jjmpeg.AVRational
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  AV_TIME_BASE_Q = AvTimeBaseQ
  getDen()I = Den
  setDen(I)V = Den
  getNum()I = Num
  setNum(I)V = Num
  dispose()V = Dispose()
  q2d()D = Q2d()
  rescale(JJJ)J = Rescale(long, long, long)
  rescaleQ(JLau/notzed/jjmpeg/AVRational;Lau/notzed/jjmpeg/AVRational;)J = RescaleQ(long, AU.Notzed.Jjmpeg.AVRational, AU.Notzed.Jjmpeg.AVRational)
  scale(JI)J = Scale(long, int)
au/notzed/jjmpeg/AVSamples = AU.Notzed.Jjmpeg.AVSamples
  <init>(Lau/notzed/jjmpeg/SampleFormat;)V = .ctor(AU.Notzed.Jjmpeg.SampleFormat)
  <init>(Lau/notzed/jjmpeg/SampleFormat;II)V = .ctor(AU.Notzed.Jjmpeg.SampleFormat, int, int)
  getBuffer()Ljava/nio/ByteBuffer; = Buffer
  getFormat()Lau/notzed/jjmpeg/SampleFormat; = Format
  getSamples()Ljava/nio/Buffer; = Samples
  dispose()V = Dispose()
  fill(Lau/notzed/jjmpeg/AVSamples;)Z = Fill(AU.Notzed.Jjmpeg.AVSamples)
  pad()V = Pad()
au/notzed/jjmpeg/AVStream = AU.Notzed.Jjmpeg.AVStream
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  getCodec()Lau/notzed/jjmpeg/AVCodecContext; = Codec
  getDuration()J = Duration
  getId()I = Id
  getIndex()I = Index
  getNBFrames()J = NBFrames
  getRFrameRate()Lau/notzed/jjmpeg/AVRational; = RFrameRate
  getStartTime()J = StartTime
  getTimeBase()Lau/notzed/jjmpeg/AVRational; = TimeBase
  dispose()V = Dispose()
au/notzed/jjmpeg/CodecID = AU.Notzed.Jjmpeg.CodecID
  <init>()V = .ctor()
au/notzed/jjmpeg/CodecID_FFMPEG_441 = AU.Notzed.Jjmpeg.CodecID_FFMPEG_441
  <init>()V = .ctor()
  CODEC_ID_012V = CodecId012v
  CODEC_ID_4GV = CodecId4gv
  CODEC_ID_4XM = CodecId4xm
  CODEC_ID_8BPS = CodecId8bps
  CODEC_ID_8SVX_EXP = CodecId8svxExp
  CODEC_ID_8SVX_FIB = CodecId8svxFib
  CODEC_ID_A64_MULTI = CodecIdA64Multi
  CODEC_ID_A64_MULTI5 = CodecIdA64Multi5
  CODEC_ID_AAC = CodecIdAac
  CODEC_ID_AAC_LATM = CodecIdAacLatm
  CODEC_ID_AASC = CodecIdAasc
  CODEC_ID_AC3 = CodecIdAc3
  CODEC_ID_ACELP_KELVIN = CodecIdAcelpKelvin
  CODEC_ID_ADPCM_4XM = CodecIdAdpcm4xm
  CODEC_ID_ADPCM_ADX = CodecIdAdpcmAdx
  CODEC_ID_ADPCM_AFC = CodecIdAdpcmAfc
  CODEC_ID_ADPCM_AGM = CodecIdAdpcmAgm
  CODEC_ID_ADPCM_AICA = CodecIdAdpcmAica
  CODEC_ID_ADPCM_ARGO = CodecIdAdpcmArgo
  CODEC_ID_ADPCM_CT = CodecIdAdpcmCt
  CODEC_ID_ADPCM_DTK = CodecIdAdpcmDtk
  CODEC_ID_ADPCM_EA = CodecIdAdpcmEa
  CODEC_ID_ADPCM_EA_MAXIS_XA = CodecIdAdpcmEaMaxisXa
  CODEC_ID_ADPCM_EA_R1 = CodecIdAdpcmEaR1
  CODEC_ID_ADPCM_EA_R2 = CodecIdAdpcmEaR2
  CODEC_ID_ADPCM_EA_R3 = CodecIdAdpcmEaR3
  CODEC_ID_ADPCM_EA_XAS = CodecIdAdpcmEaXas
  CODEC_ID_ADPCM_G722 = CodecIdAdpcmG722
  CODEC_ID_ADPCM_G726 = CodecIdAdpcmG726
  CODEC_ID_ADPCM_G726LE = CodecIdAdpcmG726le
  CODEC_ID_ADPCM_IMA_ALP = CodecIdAdpcmImaAlp
  CODEC_ID_ADPCM_IMA_AMV = CodecIdAdpcmImaAmv
  CODEC_ID_ADPCM_IMA_APC = CodecIdAdpcmImaApc
  CODEC_ID_ADPCM_IMA_APM = CodecIdAdpcmImaApm
  CODEC_ID_ADPCM_IMA_CUNNING = CodecIdAdpcmImaCunning
  CODEC_ID_ADPCM_IMA_DAT4 = CodecIdAdpcmImaDat4
  CODEC_ID_ADPCM_IMA_DK3 = CodecIdAdpcmImaDk3
  CODEC_ID_ADPCM_IMA_DK4 = CodecIdAdpcmImaDk4
  CODEC_ID_ADPCM_IMA_EA_EACS = CodecIdAdpcmImaEaEacs
  CODEC_ID_ADPCM_IMA_EA_SEAD = CodecIdAdpcmImaEaSead
  CODEC_ID_ADPCM_IMA_ISS = CodecIdAdpcmImaIss
  CODEC_ID_ADPCM_IMA_MOFLEX = CodecIdAdpcmImaMoflex
  CODEC_ID_ADPCM_IMA_MTF = CodecIdAdpcmImaMtf
  CODEC_ID_ADPCM_IMA_OKI = CodecIdAdpcmImaOki
  CODEC_ID_ADPCM_IMA_QT = CodecIdAdpcmImaQt
  CODEC_ID_ADPCM_IMA_RAD = CodecIdAdpcmImaRad
  CODEC_ID_ADPCM_IMA_SMJPEG = CodecIdAdpcmImaSmjpeg
  CODEC_ID_ADPCM_IMA_SSI = CodecIdAdpcmImaSsi
  CODEC_ID_ADPCM_IMA_WAV = CodecIdAdpcmImaWav
  CODEC_ID_ADPCM_IMA_WS = CodecIdAdpcmImaWs
  CODEC_ID_ADPCM_MS = CodecIdAdpcmMs
  CODEC_ID_ADPCM_MTAF = CodecIdAdpcmMtaf
  CODEC_ID_ADPCM_PSX = CodecIdAdpcmPsx
  CODEC_ID_ADPCM_SBPRO_2 = CodecIdAdpcmSbpro2
  CODEC_ID_ADPCM_SBPRO_3 = CodecIdAdpcmSbpro3
  CODEC_ID_ADPCM_SBPRO_4 = CodecIdAdpcmSbpro4
  CODEC_ID_ADPCM_SWF = CodecIdAdpcmSwf
  CODEC_ID_ADPCM_THP = CodecIdAdpcmThp
  CODEC_ID_ADPCM_THP_LE = CodecIdAdpcmThpLe
  CODEC_ID_ADPCM_VIMA = CodecIdAdpcmVima
  CODEC_ID_ADPCM_XA = CodecIdAdpcmXa
  CODEC_ID_ADPCM_YAMAHA = CodecIdAdpcmYamaha
  CODEC_ID_ADPCM_ZORK = CodecIdAdpcmZork
  CODEC_ID_AGM = CodecIdAgm
  CODEC_ID_AIC = CodecIdAic
  CODEC_ID_ALAC = CodecIdAlac
  CODEC_ID_ALIAS_PIX = CodecIdAliasPix
  CODEC_ID_AMR_NB = CodecIdAmrNb
  CODEC_ID_AMR_WB = CodecIdAmrWb
  CODEC_ID_AMV = CodecIdAmv
  CODEC_ID_ANM = CodecIdAnm
  CODEC_ID_ANSI = CodecIdAnsi
  CODEC_ID_APE = CodecIdApe
  CODEC_ID_APNG = CodecIdApng
  CODEC_ID_APTX = CodecIdAptx
  CODEC_ID_APTX_HD = CodecIdAptxHd
  CODEC_ID_ARBC = CodecIdArbc
  CODEC_ID_ARGO = CodecIdArgo
  CODEC_ID_ARIB_CAPTION = CodecIdAribCaption
  CODEC_ID_ASS = CodecIdAss
  CODEC_ID_ASV1 = CodecIdAsv1
  CODEC_ID_ASV2 = CodecIdAsv2
  CODEC_ID_ATRAC1 = CodecIdAtrac1
  CODEC_ID_ATRAC3 = CodecIdAtrac3
  CODEC_ID_ATRAC3AL = CodecIdAtrac3al
  CODEC_ID_ATRAC3P = CodecIdAtrac3p
  CODEC_ID_ATRAC3PAL = CodecIdAtrac3pal
  CODEC_ID_ATRAC9 = CodecIdAtrac9
  CODEC_ID_AURA = CodecIdAura
  CODEC_ID_AURA2 = CodecIdAura2
  CODEC_ID_AV1 = CodecIdAv1
  CODEC_ID_AVRN = CodecIdAvrn
  CODEC_ID_AVRP = CodecIdAvrp
  CODEC_ID_AVS = CodecIdAvs
  CODEC_ID_AVS2 = CodecIdAvs2
  CODEC_ID_AVS3 = CodecIdAvs3
  CODEC_ID_AVUI = CodecIdAvui
  CODEC_ID_AYUV = CodecIdAyuv
  CODEC_ID_BETHSOFTVID = CodecIdBethsoftvid
  CODEC_ID_BFI = CodecIdBfi
  CODEC_ID_BIN_DATA = CodecIdBinData
  CODEC_ID_BINKAUDIO_DCT = CodecIdBinkaudioDct
  CODEC_ID_BINKAUDIO_RDFT = CodecIdBinkaudioRdft
  CODEC_ID_BINKVIDEO = CodecIdBinkvideo
  CODEC_ID_BINTEXT = CodecIdBintext
  CODEC_ID_BITPACKED = CodecIdBitpacked
  CODEC_ID_BMP = CodecIdBmp
  CODEC_ID_BMV_AUDIO = CodecIdBmvAudio
  CODEC_ID_BMV_VIDEO = CodecIdBmvVideo
  CODEC_ID_BRENDER_PIX = CodecIdBrenderPix
  CODEC_ID_C93 = CodecIdC93
  CODEC_ID_CAVS = CodecIdCavs
  CODEC_ID_CDGRAPHICS = CodecIdCdgraphics
  CODEC_ID_CDTOONS = CodecIdCdtoons
  CODEC_ID_CDXL = CodecIdCdxl
  CODEC_ID_CELT = CodecIdCelt
  CODEC_ID_CFHD = CodecIdCfhd
  CODEC_ID_CINEPAK = CodecIdCinepak
  CODEC_ID_CLEARVIDEO = CodecIdClearvideo
  CODEC_ID_CLJR = CodecIdCljr
  CODEC_ID_CLLC = CodecIdCllc
  CODEC_ID_CMV = CodecIdCmv
  CODEC_ID_CODEC2 = CodecIdCodec2
  CODEC_ID_COMFORT_NOISE = CodecIdComfortNoise
  CODEC_ID_COOK = CodecIdCook
  CODEC_ID_CPIA = CodecIdCpia
  CODEC_ID_CRI = CodecIdCri
  CODEC_ID_CSCD = CodecIdCscd
  CODEC_ID_CYUV = CodecIdCyuv
  CODEC_ID_DAALA = CodecIdDaala
  CODEC_ID_DDS = CodecIdDds
  CODEC_ID_DERF_DPCM = CodecIdDerfDpcm
  CODEC_ID_DFA = CodecIdDfa
  CODEC_ID_DIRAC = CodecIdDirac
  CODEC_ID_DNXHD = CodecIdDnxhd
  CODEC_ID_DOLBY_E = CodecIdDolbyE
  CODEC_ID_DPX = CodecIdDpx
  CODEC_ID_DSD_LSBF = CodecIdDsdLsbf
  CODEC_ID_DSD_LSBF_PLANAR = CodecIdDsdLsbfPlanar
  CODEC_ID_DSD_MSBF = CodecIdDsdMsbf
  CODEC_ID_DSD_MSBF_PLANAR = CodecIdDsdMsbfPlanar
  CODEC_ID_DSICINAUDIO = CodecIdDsicinaudio
  CODEC_ID_DSICINVIDEO = CodecIdDsicinvideo
  CODEC_ID_DSS_SP = CodecIdDssSp
  CODEC_ID_DST = CodecIdDst
  CODEC_ID_DTS = CodecIdDts
  CODEC_ID_DVAUDIO = CodecIdDvaudio
  CODEC_ID_DVB_SUBTITLE = CodecIdDvbSubtitle
  CODEC_ID_DVB_TELETEXT = CodecIdDvbTeletext
  CODEC_ID_DVD_NAV = CodecIdDvdNav
  CODEC_ID_DVD_SUBTITLE = CodecIdDvdSubtitle
  CODEC_ID_DVVIDEO = CodecIdDvvideo
  CODEC_ID_DXA = CodecIdDxa
  CODEC_ID_DXTORY = CodecIdDxtory
  CODEC_ID_DXV = CodecIdDxv
  CODEC_ID_EAC3 = CodecIdEac3
  CODEC_ID_EIA_608 = CodecIdEia608
  CODEC_ID_EPG = CodecIdEpg
  CODEC_ID_ESCAPE124 = CodecIdEscape124
  CODEC_ID_ESCAPE130 = CodecIdEscape130
  CODEC_ID_EVRC = CodecIdEvrc
  CODEC_ID_EXR = CodecIdExr
  CODEC_ID_FASTAUDIO = CodecIdFastaudio
  CODEC_ID_FFMETADATA = CodecIdFfmetadata
  CODEC_ID_FFV1 = CodecIdFfv1
  CODEC_ID_FFVHUFF = CodecIdFfvhuff
  CODEC_ID_FFWAVESYNTH = CodecIdFfwavesynth
  CODEC_ID_FIC = CodecIdFic
  CODEC_ID_FIRST_AUDIO = CodecIdFirstAudio
  CODEC_ID_FIRST_SUBTITLE = CodecIdFirstSubtitle
  CODEC_ID_FIRST_UNKNOWN = CodecIdFirstUnknown
  CODEC_ID_FITS = CodecIdFits
  CODEC_ID_FLAC = CodecIdFlac
  CODEC_ID_FLASHSV = CodecIdFlashsv
  CODEC_ID_FLASHSV2 = CodecIdFlashsv2
  CODEC_ID_FLIC = CodecIdFlic
  CODEC_ID_FLV1 = CodecIdFlv1
  CODEC_ID_FMVC = CodecIdFmvc
  CODEC_ID_FRAPS = CodecIdFraps
  CODEC_ID_FRWU = CodecIdFrwu
  CODEC_ID_G2M = CodecIdG2m
  CODEC_ID_G723_1 = CodecIdG7231
  CODEC_ID_G729 = CodecIdG729
  CODEC_ID_GDV = CodecIdGdv
  CODEC_ID_GIF = CodecIdGif
  CODEC_ID_GREMLIN_DPCM = CodecIdGremlinDpcm
  CODEC_ID_GSM = CodecIdGsm
  CODEC_ID_GSM_MS = CodecIdGsmMs
  CODEC_ID_H261 = CodecIdH261
  CODEC_ID_H263 = CodecIdH263
  CODEC_ID_H263I = CodecIdH263i
  CODEC_ID_H263P = CodecIdH263p
  CODEC_ID_H264 = CodecIdH264
  CODEC_ID_H265 = CodecIdH265
  CODEC_ID_H266 = CodecIdH266
  CODEC_ID_HAP = CodecIdHap
  CODEC_ID_HCA = CodecIdHca
  CODEC_ID_HCOM = CodecIdHcom
  CODEC_ID_HDMV_PGS_SUBTITLE = CodecIdHdmvPgsSubtitle
  CODEC_ID_HDMV_TEXT_SUBTITLE = CodecIdHdmvTextSubtitle
  CODEC_ID_HEVC = CodecIdHevc
  CODEC_ID_HNM4_VIDEO = CodecIdHnm4Video
  CODEC_ID_HQ_HQA = CodecIdHqHqa
  CODEC_ID_HQX = CodecIdHqx
  CODEC_ID_HUFFYUV = CodecIdHuffyuv
  CODEC_ID_HYMT = CodecIdHymt
  CODEC_ID_IAC = CodecIdIac
  CODEC_ID_IDCIN = CodecIdIdcin
  CODEC_ID_IDF = CodecIdIdf
  CODEC_ID_IFF_BYTERUN1 = CodecIdIffByterun1
  CODEC_ID_IFF_ILBM = CodecIdIffIlbm
  CODEC_ID_ILBC = CodecIdIlbc
  CODEC_ID_IMC = CodecIdImc
  CODEC_ID_IMM4 = CodecIdImm4
  CODEC_ID_IMM5 = CodecIdImm5
  CODEC_ID_INDEO2 = CodecIdIndeo2
  CODEC_ID_INDEO3 = CodecIdIndeo3
  CODEC_ID_INDEO4 = CodecIdIndeo4
  CODEC_ID_INDEO5 = CodecIdIndeo5
  CODEC_ID_INTERPLAY_ACM = CodecIdInterplayAcm
  CODEC_ID_INTERPLAY_DPCM = CodecIdInterplayDpcm
  CODEC_ID_INTERPLAY_VIDEO = CodecIdInterplayVideo
  CODEC_ID_IPU = CodecIdIpu
  CODEC_ID_JACOSUB = CodecIdJacosub
  CODEC_ID_JPEG2000 = CodecIdJpeg2000
  CODEC_ID_JPEGLS = CodecIdJpegls
  CODEC_ID_JV = CodecIdJv
  CODEC_ID_KGV1 = CodecIdKgv1
  CODEC_ID_KMVC = CodecIdKmvc
  CODEC_ID_LAGARITH = CodecIdLagarith
  CODEC_ID_LJPEG = CodecIdLjpeg
  CODEC_ID_LOCO = CodecIdLoco
  CODEC_ID_LSCR = CodecIdLscr
  CODEC_ID_M101 = CodecIdM101
  CODEC_ID_MACE3 = CodecIdMace3
  CODEC_ID_MACE6 = CodecIdMace6
  CODEC_ID_MAD = CodecIdMad
  CODEC_ID_MAGICYUV = CodecIdMagicyuv
  CODEC_ID_MDEC = CodecIdMdec
  CODEC_ID_METASOUND = CodecIdMetasound
  CODEC_ID_MICRODVD = CodecIdMicrodvd
  CODEC_ID_MIMIC = CodecIdMimic
  CODEC_ID_MJPEG = CodecIdMjpeg
  CODEC_ID_MJPEGB = CodecIdMjpegb
  CODEC_ID_MLP = CodecIdMlp
  CODEC_ID_MMVIDEO = CodecIdMmvideo
  CODEC_ID_MOBICLIP = CodecIdMobiclip
  CODEC_ID_MOTIONPIXELS = CodecIdMotionpixels
  CODEC_ID_MOV_TEXT = CodecIdMovText
  CODEC_ID_MP1 = CodecIdMp1
  CODEC_ID_MP2 = CodecIdMp2
  CODEC_ID_MP3 = CodecIdMp3
  CODEC_ID_MP3ADU = CodecIdMp3adu
  CODEC_ID_MP3ON4 = CodecIdMp3on4
  CODEC_ID_MP4ALS = CodecIdMp4als
  CODEC_ID_MPEG1VIDEO = CodecIdMpeg1video
  CODEC_ID_MPEG2TS = CodecIdMpeg2ts
  CODEC_ID_MPEG2VIDEO = CodecIdMpeg2video
  CODEC_ID_MPEG4 = CodecIdMpeg4
  CODEC_ID_MPEG4SYSTEMS = CodecIdMpeg4systems
  CODEC_ID_MPEGH_3D_AUDIO = CodecIdMpegh3dAudio
  CODEC_ID_MPL2 = CodecIdMpl2
  CODEC_ID_MSA1 = CodecIdMsa1
  CODEC_ID_MSCC = CodecIdMscc
  CODEC_ID_MSMPEG4V1 = CodecIdMsmpeg4v1
  CODEC_ID_MSMPEG4V2 = CodecIdMsmpeg4v2
  CODEC_ID_MSMPEG4V3 = CodecIdMsmpeg4v3
  CODEC_ID_MSP2 = CodecIdMsp2
  CODEC_ID_MSRLE = CodecIdMsrle
  CODEC_ID_MSS1 = CodecIdMss1
  CODEC_ID_MSS2 = CodecIdMss2
  CODEC_ID_MSVIDEO1 = CodecIdMsvideo1
  CODEC_ID_MSZH = CodecIdMszh
  CODEC_ID_MTS2 = CodecIdMts2
  CODEC_ID_MUSEPACK7 = CodecIdMusepack7
  CODEC_ID_MUSEPACK8 = CodecIdMusepack8
  CODEC_ID_MV30 = CodecIdMv30
  CODEC_ID_MVC1 = CodecIdMvc1
  CODEC_ID_MVC2 = CodecIdMvc2
  CODEC_ID_MVDV = CodecIdMvdv
  CODEC_ID_MVHA = CodecIdMvha
  CODEC_ID_MWSC = CodecIdMwsc
  CODEC_ID_MXPEG = CodecIdMxpeg
  CODEC_ID_NELLYMOSER = CodecIdNellymoser
  CODEC_ID_NONE = CodecIdNone
  CODEC_ID_NOTCHLC = CodecIdNotchlc
  CODEC_ID_NUV = CodecIdNuv
  CODEC_ID_ON2AVC = CodecIdOn2avc
  CODEC_ID_OPUS = CodecIdOpus
  CODEC_ID_OTF = CodecIdOtf
  CODEC_ID_PAF_AUDIO = CodecIdPafAudio
  CODEC_ID_PAF_VIDEO = CodecIdPafVideo
  CODEC_ID_PAM = CodecIdPam
  CODEC_ID_PBM = CodecIdPbm
  CODEC_ID_PCM_ALAW = CodecIdPcmAlaw
  CODEC_ID_PCM_BLURAY = CodecIdPcmBluray
  CODEC_ID_PCM_DVD = CodecIdPcmDvd
  CODEC_ID_PCM_F16LE = CodecIdPcmF16le
  CODEC_ID_PCM_F24LE = CodecIdPcmF24le
  CODEC_ID_PCM_F32BE = CodecIdPcmF32be
  CODEC_ID_PCM_F32LE = CodecIdPcmF32le
  CODEC_ID_PCM_F64BE = CodecIdPcmF64be
  CODEC_ID_PCM_F64LE = CodecIdPcmF64le
  CODEC_ID_PCM_LXF = CodecIdPcmLxf
  CODEC_ID_PCM_MULAW = CodecIdPcmMulaw
  CODEC_ID_PCM_S16BE = CodecIdPcmS16be
  CODEC_ID_PCM_S16BE_PLANAR = CodecIdPcmS16bePlanar
  CODEC_ID_PCM_S16LE = CodecIdPcmS16le
  CODEC_ID_PCM_S16LE_PLANAR = CodecIdPcmS16lePlanar
  CODEC_ID_PCM_S24BE = CodecIdPcmS24be
  CODEC_ID_PCM_S24DAUD = CodecIdPcmS24daud
  CODEC_ID_PCM_S24LE = CodecIdPcmS24le
  CODEC_ID_PCM_S24LE_PLANAR = CodecIdPcmS24lePlanar
  CODEC_ID_PCM_S32BE = CodecIdPcmS32be
  CODEC_ID_PCM_S32LE = CodecIdPcmS32le
  CODEC_ID_PCM_S32LE_PLANAR = CodecIdPcmS32lePlanar
  CODEC_ID_PCM_S64BE = CodecIdPcmS64be
  CODEC_ID_PCM_S64LE = CodecIdPcmS64le
  CODEC_ID_PCM_S8 = CodecIdPcmS8
  CODEC_ID_PCM_S8_PLANAR = CodecIdPcmS8Planar
  CODEC_ID_PCM_SGA = CodecIdPcmSga
  CODEC_ID_PCM_U16BE = CodecIdPcmU16be
  CODEC_ID_PCM_U16LE = CodecIdPcmU16le
  CODEC_ID_PCM_U24BE = CodecIdPcmU24be
  CODEC_ID_PCM_U24LE = CodecIdPcmU24le
  CODEC_ID_PCM_U32BE = CodecIdPcmU32be
  CODEC_ID_PCM_U32LE = CodecIdPcmU32le
  CODEC_ID_PCM_U8 = CodecIdPcmU8
  CODEC_ID_PCM_VIDC = CodecIdPcmVidc
  CODEC_ID_PCM_ZORK = CodecIdPcmZork
  CODEC_ID_PCX = CodecIdPcx
  CODEC_ID_PFM = CodecIdPfm
  CODEC_ID_PGM = CodecIdPgm
  CODEC_ID_PGMYUV = CodecIdPgmyuv
  CODEC_ID_PGX = CodecIdPgx
  CODEC_ID_PHOTOCD = CodecIdPhotocd
  CODEC_ID_PICTOR = CodecIdPictor
  CODEC_ID_PIXLET = CodecIdPixlet
  CODEC_ID_PJS = CodecIdPjs
  CODEC_ID_PNG = CodecIdPng
  CODEC_ID_PPM = CodecIdPpm
  CODEC_ID_PROBE = CodecIdProbe
  CODEC_ID_PRORES = CodecIdProres
  CODEC_ID_PROSUMER = CodecIdProsumer
  CODEC_ID_PSD = CodecIdPsd
  CODEC_ID_PTX = CodecIdPtx
  CODEC_ID_QCELP = CodecIdQcelp
  CODEC_ID_QDM2 = CodecIdQdm2
  CODEC_ID_QDMC = CodecIdQdmc
  CODEC_ID_QDRAW = CodecIdQdraw
  CODEC_ID_QPEG = CodecIdQpeg
  CODEC_ID_QTRLE = CodecIdQtrle
  CODEC_ID_R10K = CodecIdR10k
  CODEC_ID_R210 = CodecIdR210
  CODEC_ID_RA_144 = CodecIdRa144
  CODEC_ID_RA_288 = CodecIdRa288
  CODEC_ID_RALF = CodecIdRalf
  CODEC_ID_RASC = CodecIdRasc
  CODEC_ID_RAWVIDEO = CodecIdRawvideo
  CODEC_ID_REALTEXT = CodecIdRealtext
  CODEC_ID_RL2 = CodecIdRl2
  CODEC_ID_ROQ = CodecIdRoq
  CODEC_ID_ROQ_DPCM = CodecIdRoqDpcm
  CODEC_ID_RPZA = CodecIdRpza
  CODEC_ID_RSCC = CodecIdRscc
  CODEC_ID_RV10 = CodecIdRv10
  CODEC_ID_RV20 = CodecIdRv20
  CODEC_ID_RV30 = CodecIdRv30
  CODEC_ID_RV40 = CodecIdRv40
  CODEC_ID_S302M = CodecIdS302m
  CODEC_ID_SAMI = CodecIdSami
  CODEC_ID_SANM = CodecIdSanm
  CODEC_ID_SBC = CodecIdSbc
  CODEC_ID_SCPR = CodecIdScpr
  CODEC_ID_SCREENPRESSO = CodecIdScreenpresso
  CODEC_ID_SCTE_35 = CodecIdScte35
  CODEC_ID_SDX2_DPCM = CodecIdSdx2Dpcm
  CODEC_ID_SGA_VIDEO = CodecIdSgaVideo
  CODEC_ID_SGI = CodecIdSgi
  CODEC_ID_SGIRLE = CodecIdSgirle
  CODEC_ID_SHEERVIDEO = CodecIdSheervideo
  CODEC_ID_SHORTEN = CodecIdShorten
  CODEC_ID_SIMBIOSIS_IMX = CodecIdSimbiosisImx
  CODEC_ID_SIPR = CodecIdSipr
  CODEC_ID_SIREN = CodecIdSiren
  CODEC_ID_SMACKAUDIO = CodecIdSmackaudio
  CODEC_ID_SMACKVIDEO = CodecIdSmackvideo
  CODEC_ID_SMC = CodecIdSmc
  CODEC_ID_SMPTE_KLV = CodecIdSmpteKlv
  CODEC_ID_SMV = CodecIdSmv
  CODEC_ID_SMVJPEG = CodecIdSmvjpeg
  CODEC_ID_SNOW = CodecIdSnow
  CODEC_ID_SOL_DPCM = CodecIdSolDpcm
  CODEC_ID_SONIC = CodecIdSonic
  CODEC_ID_SONIC_LS = CodecIdSonicLs
  CODEC_ID_SP5X = CodecIdSp5x
  CODEC_ID_SPEEDHQ = CodecIdSpeedhq
  CODEC_ID_SPEEX = CodecIdSpeex
  CODEC_ID_SRGC = CodecIdSrgc
  CODEC_ID_SRT = CodecIdSrt
  CODEC_ID_SSA = CodecIdSsa
  CODEC_ID_STL = CodecIdStl
  CODEC_ID_SUBRIP = CodecIdSubrip
  CODEC_ID_SUBVIEWER = CodecIdSubviewer
  CODEC_ID_SUBVIEWER1 = CodecIdSubviewer1
  CODEC_ID_SUNRAST = CodecIdSunrast
  CODEC_ID_SVG = CodecIdSvg
  CODEC_ID_SVQ1 = CodecIdSvq1
  CODEC_ID_SVQ3 = CodecIdSvq3
  CODEC_ID_TAK = CodecIdTak
  CODEC_ID_TARGA = CodecIdTarga
  CODEC_ID_TARGA_Y216 = CodecIdTargaY216
  CODEC_ID_TDSC = CodecIdTdsc
  CODEC_ID_TEXT = CodecIdText
  CODEC_ID_TGQ = CodecIdTgq
  CODEC_ID_TGV = CodecIdTgv
  CODEC_ID_THEORA = CodecIdTheora
  CODEC_ID_THP = CodecIdThp
  CODEC_ID_TIERTEXSEQVIDEO = CodecIdTiertexseqvideo
  CODEC_ID_TIFF = CodecIdTiff
  CODEC_ID_TIMED_ID3 = CodecIdTimedId3
  CODEC_ID_TMV = CodecIdTmv
  CODEC_ID_TQI = CodecIdTqi
  CODEC_ID_TRUEHD = CodecIdTruehd
  CODEC_ID_TRUEMOTION1 = CodecIdTruemotion1
  CODEC_ID_TRUEMOTION2 = CodecIdTruemotion2
  CODEC_ID_TRUEMOTION2RT = CodecIdTruemotion2rt
  CODEC_ID_TRUESPEECH = CodecIdTruespeech
  CODEC_ID_TSCC = CodecIdTscc
  CODEC_ID_TSCC2 = CodecIdTscc2
  CODEC_ID_TTA = CodecIdTta
  CODEC_ID_TTF = CodecIdTtf
  CODEC_ID_TTML = CodecIdTtml
  CODEC_ID_TWINVQ = CodecIdTwinvq
  CODEC_ID_TXD = CodecIdTxd
  CODEC_ID_ULTI = CodecIdUlti
  CODEC_ID_UTVIDEO = CodecIdUtvideo
  CODEC_ID_V210 = CodecIdV210
  CODEC_ID_V210X = CodecIdV210x
  CODEC_ID_V308 = CodecIdV308
  CODEC_ID_V408 = CodecIdV408
  CODEC_ID_V410 = CodecIdV410
  CODEC_ID_VB = CodecIdVb
  CODEC_ID_VBLE = CodecIdVble
  CODEC_ID_VC1 = CodecIdVc1
  CODEC_ID_VC1IMAGE = CodecIdVc1image
  CODEC_ID_VCR1 = CodecIdVcr1
  CODEC_ID_VIXL = CodecIdVixl
  CODEC_ID_VMDAUDIO = CodecIdVmdaudio
  CODEC_ID_VMDVIDEO = CodecIdVmdvideo
  CODEC_ID_VMNC = CodecIdVmnc
  CODEC_ID_VORBIS = CodecIdVorbis
  CODEC_ID_VP3 = CodecIdVp3
  CODEC_ID_VP4 = CodecIdVp4
  CODEC_ID_VP5 = CodecIdVp5
  CODEC_ID_VP6 = CodecIdVp6
  CODEC_ID_VP6A = CodecIdVp6a
  CODEC_ID_VP6F = CodecIdVp6f
  CODEC_ID_VP7 = CodecIdVp7
  CODEC_ID_VP8 = CodecIdVp8
  CODEC_ID_VP9 = CodecIdVp9
  CODEC_ID_VPLAYER = CodecIdVplayer
  CODEC_ID_VVC = CodecIdVvc
  CODEC_ID_WAVPACK = CodecIdWavpack
  CODEC_ID_WCMV = CodecIdWcmv
  CODEC_ID_WEBP = CodecIdWebp
  CODEC_ID_WEBVTT = CodecIdWebvtt
  CODEC_ID_WESTWOOD_SND1 = CodecIdWestwoodSnd1
  CODEC_ID_WMALOSSLESS = CodecIdWmalossless
  CODEC_ID_WMAPRO = CodecIdWmapro
  CODEC_ID_WMAV1 = CodecIdWmav1
  CODEC_ID_WMAV2 = CodecIdWmav2
  CODEC_ID_WMAVOICE = CodecIdWmavoice
  CODEC_ID_WMV1 = CodecIdWmv1
  CODEC_ID_WMV2 = CodecIdWmv2
  CODEC_ID_WMV3 = CodecIdWmv3
  CODEC_ID_WMV3IMAGE = CodecIdWmv3image
  CODEC_ID_WNV1 = CodecIdWnv1
  CODEC_ID_WRAPPED_AVFRAME = CodecIdWrappedAvframe
  CODEC_ID_WS_VQA = CodecIdWsVqa
  CODEC_ID_XAN_DPCM = CodecIdXanDpcm
  CODEC_ID_XAN_WC3 = CodecIdXanWc3
  CODEC_ID_XAN_WC4 = CodecIdXanWc4
  CODEC_ID_XBIN = CodecIdXbin
  CODEC_ID_XBM = CodecIdXbm
  CODEC_ID_XFACE = CodecIdXface
  CODEC_ID_XMA1 = CodecIdXma1
  CODEC_ID_XMA2 = CodecIdXma2
  CODEC_ID_XPM = CodecIdXpm
  CODEC_ID_XSUB = CodecIdXsub
  CODEC_ID_XWD = CodecIdXwd
  CODEC_ID_Y41P = CodecIdY41p
  CODEC_ID_YLC = CodecIdYlc
  CODEC_ID_YOP = CodecIdYop
  CODEC_ID_YUV4 = CodecIdYuv4
  CODEC_ID_ZEROCODEC = CodecIdZerocodec
  CODEC_ID_ZLIB = CodecIdZlib
  CODEC_ID_ZMBV = CodecIdZmbv
au/notzed/jjmpeg/CodecID_FFMPEG_DEFAULT = AU.Notzed.Jjmpeg.CodecID_FFMPEG_DEFAULT
  <init>()V = .ctor()
  CODEC_ID_4XM = CodecId4xm
  CODEC_ID_8BPS = CodecId8bps
  CODEC_ID_8SVX_EXP = CodecId8svxExp
  CODEC_ID_8SVX_FIB = CodecId8svxFib
  CODEC_ID_A64_MULTI = CodecIdA64Multi
  CODEC_ID_A64_MULTI5 = CodecIdA64Multi5
  CODEC_ID_AAC = CodecIdAac
  CODEC_ID_AAC_LATM = CodecIdAacLatm
  CODEC_ID_AASC = CodecIdAasc
  CODEC_ID_AC3 = CodecIdAc3
  CODEC_ID_ADPCM_4XM = CodecIdAdpcm4xm
  CODEC_ID_ADPCM_ADX = CodecIdAdpcmAdx
  CODEC_ID_ADPCM_CT = CodecIdAdpcmCt
  CODEC_ID_ADPCM_EA = CodecIdAdpcmEa
  CODEC_ID_ADPCM_EA_MAXIS_XA = CodecIdAdpcmEaMaxisXa
  CODEC_ID_ADPCM_EA_R1 = CodecIdAdpcmEaR1
  CODEC_ID_ADPCM_EA_R2 = CodecIdAdpcmEaR2
  CODEC_ID_ADPCM_EA_R3 = CodecIdAdpcmEaR3
  CODEC_ID_ADPCM_EA_XAS = CodecIdAdpcmEaXas
  CODEC_ID_ADPCM_G722 = CodecIdAdpcmG722
  CODEC_ID_ADPCM_G726 = CodecIdAdpcmG726
  CODEC_ID_ADPCM_IMA_AMV = CodecIdAdpcmImaAmv
  CODEC_ID_ADPCM_IMA_DK3 = CodecIdAdpcmImaDk3
  CODEC_ID_ADPCM_IMA_DK4 = CodecIdAdpcmImaDk4
  CODEC_ID_ADPCM_IMA_EA_EACS = CodecIdAdpcmImaEaEacs
  CODEC_ID_ADPCM_IMA_EA_SEAD = CodecIdAdpcmImaEaSead
  CODEC_ID_ADPCM_IMA_ISS = CodecIdAdpcmImaIss
  CODEC_ID_ADPCM_IMA_QT = CodecIdAdpcmImaQt
  CODEC_ID_ADPCM_IMA_SMJPEG = CodecIdAdpcmImaSmjpeg
  CODEC_ID_ADPCM_IMA_WAV = CodecIdAdpcmImaWav
  CODEC_ID_ADPCM_IMA_WS = CodecIdAdpcmImaWs
  CODEC_ID_ADPCM_MS = CodecIdAdpcmMs
  CODEC_ID_ADPCM_SBPRO_2 = CodecIdAdpcmSbpro2
  CODEC_ID_ADPCM_SBPRO_3 = CodecIdAdpcmSbpro3
  CODEC_ID_ADPCM_SBPRO_4 = CodecIdAdpcmSbpro4
  CODEC_ID_ADPCM_SWF = CodecIdAdpcmSwf
  CODEC_ID_ADPCM_THP = CodecIdAdpcmThp
  CODEC_ID_ADPCM_XA = CodecIdAdpcmXa
  CODEC_ID_ADPCM_YAMAHA = CodecIdAdpcmYamaha
  CODEC_ID_ALAC = CodecIdAlac
  CODEC_ID_AMR_NB = CodecIdAmrNb
  CODEC_ID_AMR_WB = CodecIdAmrWb
  CODEC_ID_AMV = CodecIdAmv
  CODEC_ID_ANM = CodecIdAnm
  CODEC_ID_ANSI = CodecIdAnsi
  CODEC_ID_APE = CodecIdApe
  CODEC_ID_ASV1 = CodecIdAsv1
  CODEC_ID_ASV2 = CodecIdAsv2
  CODEC_ID_ATRAC1 = CodecIdAtrac1
  CODEC_ID_ATRAC3 = CodecIdAtrac3
  CODEC_ID_ATRAC3P = CodecIdAtrac3p
  CODEC_ID_AURA = CodecIdAura
  CODEC_ID_AURA2 = CodecIdAura2
  CODEC_ID_AVS = CodecIdAvs
  CODEC_ID_BETHSOFTVID = CodecIdBethsoftvid
  CODEC_ID_BFI = CodecIdBfi
  CODEC_ID_BINKAUDIO_DCT = CodecIdBinkaudioDct
  CODEC_ID_BINKAUDIO_RDFT = CodecIdBinkaudioRdft
  CODEC_ID_BINKVIDEO = CodecIdBinkvideo
  CODEC_ID_BMP = CodecIdBmp
  CODEC_ID_C93 = CodecIdC93
  CODEC_ID_CDGRAPHICS = CodecIdCdgraphics
  CODEC_ID_CINEPAK = CodecIdCinepak
  CODEC_ID_CLJR = CodecIdCljr
  CODEC_ID_CMV = CodecIdCmv
  CODEC_ID_COOK = CodecIdCook
  CODEC_ID_CSCD = CodecIdCscd
  CODEC_ID_CYUV = CodecIdCyuv
  CODEC_ID_DFA = CodecIdDfa
  CODEC_ID_DIRAC = CodecIdDirac
  CODEC_ID_DNXHD = CodecIdDnxhd
  CODEC_ID_DPX = CodecIdDpx
  CODEC_ID_DSICINAUDIO = CodecIdDsicinaudio
  CODEC_ID_DSICINVIDEO = CodecIdDsicinvideo
  CODEC_ID_DTS = CodecIdDts
  CODEC_ID_DVAUDIO = CodecIdDvaudio
  CODEC_ID_DVB_SUBTITLE = CodecIdDvbSubtitle
  CODEC_ID_DVB_TELETEXT = CodecIdDvbTeletext
  CODEC_ID_DVD_SUBTITLE = CodecIdDvdSubtitle
  CODEC_ID_DVVIDEO = CodecIdDvvideo
  CODEC_ID_DXA = CodecIdDxa
  CODEC_ID_EAC3 = CodecIdEac3
  CODEC_ID_ESCAPE124 = CodecIdEscape124
  CODEC_ID_FFH264 = CodecIdFfh264
  CODEC_ID_FFMETADATA = CodecIdFfmetadata
  CODEC_ID_FFV1 = CodecIdFfv1
  CODEC_ID_FFVHUFF = CodecIdFfvhuff
  CODEC_ID_FLAC = CodecIdFlac
  CODEC_ID_FLASHSV = CodecIdFlashsv
  CODEC_ID_FLASHSV2 = CodecIdFlashsv2
  CODEC_ID_FLIC = CodecIdFlic
  CODEC_ID_FLV1 = CodecIdFlv1
  CODEC_ID_FRAPS = CodecIdFraps
  CODEC_ID_FRWU = CodecIdFrwu
  CODEC_ID_GIF = CodecIdGif
  CODEC_ID_GSM = CodecIdGsm
  CODEC_ID_GSM_MS = CodecIdGsmMs
  CODEC_ID_H261 = CodecIdH261
  CODEC_ID_H263 = CodecIdH263
  CODEC_ID_H263I = CodecIdH263i
  CODEC_ID_H263P = CodecIdH263p
  CODEC_ID_H264 = CodecIdH264
  CODEC_ID_HDMV_PGS_SUBTITLE = CodecIdHdmvPgsSubtitle
  CODEC_ID_HUFFYUV = CodecIdHuffyuv
  CODEC_ID_IDCIN = CodecIdIdcin
  CODEC_ID_IFF_BYTERUN1 = CodecIdIffByterun1
  CODEC_ID_IFF_ILBM = CodecIdIffIlbm
  CODEC_ID_IMC = CodecIdImc
  CODEC_ID_INDEO2 = CodecIdIndeo2
  CODEC_ID_INDEO3 = CodecIdIndeo3
  CODEC_ID_INDEO4 = CodecIdIndeo4
  CODEC_ID_INDEO5 = CodecIdIndeo5
  CODEC_ID_INTERPLAY_DPCM = CodecIdInterplayDpcm
  CODEC_ID_INTERPLAY_VIDEO = CodecIdInterplayVideo
  CODEC_ID_JPEG2000 = CodecIdJpeg2000
  CODEC_ID_JPEGLS = CodecIdJpegls
  CODEC_ID_JV = CodecIdJv
  CODEC_ID_KGV1 = CodecIdKgv1
  CODEC_ID_KMVC = CodecIdKmvc
  CODEC_ID_LAGARITH = CodecIdLagarith
  CODEC_ID_LJPEG = CodecIdLjpeg
  CODEC_ID_LOCO = CodecIdLoco
  CODEC_ID_MACE3 = CodecIdMace3
  CODEC_ID_MACE6 = CodecIdMace6
  CODEC_ID_MAD = CodecIdMad
  CODEC_ID_MDEC = CodecIdMdec
  CODEC_ID_MIMIC = CodecIdMimic
  CODEC_ID_MJPEG = CodecIdMjpeg
  CODEC_ID_MJPEGB = CodecIdMjpegb
  CODEC_ID_MLP = CodecIdMlp
  CODEC_ID_MMVIDEO = CodecIdMmvideo
  CODEC_ID_MOTIONPIXELS = CodecIdMotionpixels
  CODEC_ID_MOV_TEXT = CodecIdMovText
  CODEC_ID_MP1 = CodecIdMp1
  CODEC_ID_MP2 = CodecIdMp2
  CODEC_ID_MP3 = CodecIdMp3
  CODEC_ID_MP3ADU = CodecIdMp3adu
  CODEC_ID_MP3ON4 = CodecIdMp3on4
  CODEC_ID_MP4ALS = CodecIdMp4als
  CODEC_ID_MPEG1VIDEO = CodecIdMpeg1video
  CODEC_ID_MPEG2TS = CodecIdMpeg2ts
  CODEC_ID_MPEG2VIDEO = CodecIdMpeg2video
  CODEC_ID_MPEG2VIDEO_XVMC = CodecIdMpeg2videoXvmc
  CODEC_ID_MPEG4 = CodecIdMpeg4
  CODEC_ID_MSMPEG4V1 = CodecIdMsmpeg4v1
  CODEC_ID_MSMPEG4V2 = CodecIdMsmpeg4v2
  CODEC_ID_MSMPEG4V3 = CodecIdMsmpeg4v3
  CODEC_ID_MSRLE = CodecIdMsrle
  CODEC_ID_MSVIDEO1 = CodecIdMsvideo1
  CODEC_ID_MSZH = CodecIdMszh
  CODEC_ID_MUSEPACK7 = CodecIdMusepack7
  CODEC_ID_MUSEPACK8 = CodecIdMusepack8
  CODEC_ID_MXPEG = CodecIdMxpeg
  CODEC_ID_NELLYMOSER = CodecIdNellymoser
  CODEC_ID_NONE = CodecIdNone
  CODEC_ID_NUV = CodecIdNuv
  CODEC_ID_PAM = CodecIdPam
  CODEC_ID_PBM = CodecIdPbm
  CODEC_ID_PCM_ALAW = CodecIdPcmAlaw
  CODEC_ID_PCM_BLURAY = CodecIdPcmBluray
  CODEC_ID_PCM_DVD = CodecIdPcmDvd
  CODEC_ID_PCM_F32BE = CodecIdPcmF32be
  CODEC_ID_PCM_F32LE = CodecIdPcmF32le
  CODEC_ID_PCM_F64BE = CodecIdPcmF64be
  CODEC_ID_PCM_F64LE = CodecIdPcmF64le
  CODEC_ID_PCM_LXF = CodecIdPcmLxf
  CODEC_ID_PCM_MULAW = CodecIdPcmMulaw
  CODEC_ID_PCM_S16BE = CodecIdPcmS16be
  CODEC_ID_PCM_S16LE = CodecIdPcmS16le
  CODEC_ID_PCM_S16LE_PLANAR = CodecIdPcmS16lePlanar
  CODEC_ID_PCM_S24BE = CodecIdPcmS24be
  CODEC_ID_PCM_S24DAUD = CodecIdPcmS24daud
  CODEC_ID_PCM_S24LE = CodecIdPcmS24le
  CODEC_ID_PCM_S32BE = CodecIdPcmS32be
  CODEC_ID_PCM_S32LE = CodecIdPcmS32le
  CODEC_ID_PCM_S8 = CodecIdPcmS8
  CODEC_ID_PCM_U16BE = CodecIdPcmU16be
  CODEC_ID_PCM_U16LE = CodecIdPcmU16le
  CODEC_ID_PCM_U24BE = CodecIdPcmU24be
  CODEC_ID_PCM_U24LE = CodecIdPcmU24le
  CODEC_ID_PCM_U32BE = CodecIdPcmU32be
  CODEC_ID_PCM_U32LE = CodecIdPcmU32le
  CODEC_ID_PCM_U8 = CodecIdPcmU8
  CODEC_ID_PCM_ZORK = CodecIdPcmZork
  CODEC_ID_PCX = CodecIdPcx
  CODEC_ID_PGM = CodecIdPgm
  CODEC_ID_PGMYUV = CodecIdPgmyuv
  CODEC_ID_PICTOR = CodecIdPictor
  CODEC_ID_PNG = CodecIdPng
  CODEC_ID_PPM = CodecIdPpm
  CODEC_ID_PROBE = CodecIdProbe
  CODEC_ID_PRORES = CodecIdProres
  CODEC_ID_PTX = CodecIdPtx
  CODEC_ID_QCELP = CodecIdQcelp
  CODEC_ID_QDM2 = CodecIdQdm2
  CODEC_ID_QDMC = CodecIdQdmc
  CODEC_ID_QDRAW = CodecIdQdraw
  CODEC_ID_QPEG = CodecIdQpeg
  CODEC_ID_QTRLE = CodecIdQtrle
  CODEC_ID_R10K = CodecIdR10k
  CODEC_ID_R210 = CodecIdR210
  CODEC_ID_RA_144 = CodecIdRa144
  CODEC_ID_RA_288 = CodecIdRa288
  CODEC_ID_RAWVIDEO = CodecIdRawvideo
  CODEC_ID_RL2 = CodecIdRl2
  CODEC_ID_ROQ = CodecIdRoq
  CODEC_ID_ROQ_DPCM = CodecIdRoqDpcm
  CODEC_ID_RPZA = CodecIdRpza
  CODEC_ID_RV10 = CodecIdRv10
  CODEC_ID_RV20 = CodecIdRv20
  CODEC_ID_RV30 = CodecIdRv30
  CODEC_ID_RV40 = CodecIdRv40
  CODEC_ID_SGI = CodecIdSgi
  CODEC_ID_SHORTEN = CodecIdShorten
  CODEC_ID_SIPR = CodecIdSipr
  CODEC_ID_SMACKAUDIO = CodecIdSmackaudio
  CODEC_ID_SMACKVIDEO = CodecIdSmackvideo
  CODEC_ID_SMC = CodecIdSmc
  CODEC_ID_SNOW = CodecIdSnow
  CODEC_ID_SOL_DPCM = CodecIdSolDpcm
  CODEC_ID_SONIC = CodecIdSonic
  CODEC_ID_SONIC_LS = CodecIdSonicLs
  CODEC_ID_SP5X = CodecIdSp5x
  CODEC_ID_SPEEX = CodecIdSpeex
  CODEC_ID_SRT = CodecIdSrt
  CODEC_ID_SSA = CodecIdSsa
  CODEC_ID_SUNRAST = CodecIdSunrast
  CODEC_ID_SVQ1 = CodecIdSvq1
  CODEC_ID_SVQ3 = CodecIdSvq3
  CODEC_ID_TARGA = CodecIdTarga
  CODEC_ID_TEXT = CodecIdText
  CODEC_ID_TGQ = CodecIdTgq
  CODEC_ID_TGV = CodecIdTgv
  CODEC_ID_THEORA = CodecIdTheora
  CODEC_ID_THP = CodecIdThp
  CODEC_ID_TIERTEXSEQVIDEO = CodecIdTiertexseqvideo
  CODEC_ID_TIFF = CodecIdTiff
  CODEC_ID_TMV = CodecIdTmv
  CODEC_ID_TQI = CodecIdTqi
  CODEC_ID_TRUEHD = CodecIdTruehd
  CODEC_ID_TRUEMOTION1 = CodecIdTruemotion1
  CODEC_ID_TRUEMOTION2 = CodecIdTruemotion2
  CODEC_ID_TRUESPEECH = CodecIdTruespeech
  CODEC_ID_TSCC = CodecIdTscc
  CODEC_ID_TTA = CodecIdTta
  CODEC_ID_TTF = CodecIdTtf
  CODEC_ID_TWINVQ = CodecIdTwinvq
  CODEC_ID_TXD = CodecIdTxd
  CODEC_ID_ULTI = CodecIdUlti
  CODEC_ID_V210 = CodecIdV210
  CODEC_ID_V210X = CodecIdV210x
  CODEC_ID_VB = CodecIdVb
  CODEC_ID_VC1 = CodecIdVc1
  CODEC_ID_VCR1 = CodecIdVcr1
  CODEC_ID_VIXL = CodecIdVixl
  CODEC_ID_VMDAUDIO = CodecIdVmdaudio
  CODEC_ID_VMDVIDEO = CodecIdVmdvideo
  CODEC_ID_VMNC = CodecIdVmnc
  CODEC_ID_VORBIS = CodecIdVorbis
  CODEC_ID_VOXWARE = CodecIdVoxware
  CODEC_ID_VP3 = CodecIdVp3
  CODEC_ID_VP5 = CodecIdVp5
  CODEC_ID_VP6 = CodecIdVp6
  CODEC_ID_VP6A = CodecIdVp6a
  CODEC_ID_VP6F = CodecIdVp6f
  CODEC_ID_VP8 = CodecIdVp8
  CODEC_ID_WAVPACK = CodecIdWavpack
  CODEC_ID_WESTWOOD_SND1 = CodecIdWestwoodSnd1
  CODEC_ID_WMALOSSLESS = CodecIdWmalossless
  CODEC_ID_WMAPRO = CodecIdWmapro
  CODEC_ID_WMAV1 = CodecIdWmav1
  CODEC_ID_WMAV2 = CodecIdWmav2
  CODEC_ID_WMAVOICE = CodecIdWmavoice
  CODEC_ID_WMV1 = CodecIdWmv1
  CODEC_ID_WMV2 = CodecIdWmv2
  CODEC_ID_WMV3 = CodecIdWmv3
  CODEC_ID_WNV1 = CodecIdWnv1
  CODEC_ID_WS_VQA = CodecIdWsVqa
  CODEC_ID_XAN_DPCM = CodecIdXanDpcm
  CODEC_ID_XAN_WC3 = CodecIdXanWc3
  CODEC_ID_XAN_WC4 = CodecIdXanWc4
  CODEC_ID_XSUB = CodecIdXsub
  CODEC_ID_XVID = CodecIdXvid
  CODEC_ID_YOP = CodecIdYop
  CODEC_ID_ZLIB = CodecIdZlib
  CODEC_ID_ZMBV = CodecIdZmbv
au/notzed/jjmpeg/exception/AVDecodingError = AU.Notzed.Jjmpeg.Exception.AVDecodingError
  <init>(I)V = .ctor(int)
au/notzed/jjmpeg/exception/AVEncodingError = AU.Notzed.Jjmpeg.Exception.AVEncodingError
  <init>(I)V = .ctor(int)
au/notzed/jjmpeg/exception/AVException = AU.Notzed.Jjmpeg.Exception.AVException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
au/notzed/jjmpeg/exception/AVInvalidCodecException = AU.Notzed.Jjmpeg.Exception.AVInvalidCodecException
  <init>(Ljava/lang/String;)V = .ctor(string)
au/notzed/jjmpeg/exception/AVInvalidFormatException = AU.Notzed.Jjmpeg.Exception.AVInvalidFormatException
  <init>(Ljava/lang/String;)V = .ctor(string)
au/notzed/jjmpeg/exception/AVInvalidStreamException = AU.Notzed.Jjmpeg.Exception.AVInvalidStreamException
  <init>(Ljava/lang/String;)V = .ctor(string)
au/notzed/jjmpeg/exception/AVIOException = AU.Notzed.Jjmpeg.Exception.AVIOException
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(Ljava/lang/String;)V = .ctor(string)
au/notzed/jjmpeg/IntHolder = AU.Notzed.Jjmpeg.IntHolder
  <init>(I)V = .ctor(int)
  value = Value
au/notzed/jjmpeg/LongHolder = AU.Notzed.Jjmpeg.LongHolder
  <init>(J)V = .ctor(long)
  value = Value
au/notzed/jjmpeg/ObjectHolder = AU.Notzed.Jjmpeg.ObjectHolder
  <init>(Ljava/lang/Object;)V = .ctor(Java.Lang.Object)
  value = Value
au/notzed/jjmpeg/PixelFormat = AU.Notzed.Jjmpeg.PixelFormat
  PIX_FMT_ABGR = PixFmtAbgr
  PIX_FMT_ARGB = PixFmtArgb
  PIX_FMT_BGR24 = PixFmtBgr24
  PIX_FMT_BGR4 = PixFmtBgr4
  PIX_FMT_BGR444BE = PixFmtBgr444be
  PIX_FMT_BGR444LE = PixFmtBgr444le
  PIX_FMT_BGR4_BYTE = PixFmtBgr4Byte
  PIX_FMT_BGR555BE = PixFmtBgr555be
  PIX_FMT_BGR555LE = PixFmtBgr555le
  PIX_FMT_BGR565BE = PixFmtBgr565be
  PIX_FMT_BGR565LE = PixFmtBgr565le
  PIX_FMT_BGR8 = PixFmtBgr8
  PIX_FMT_BGRA = PixFmtBgra
  PIX_FMT_DXVA2_VLD = PixFmtDxva2Vld
  PIX_FMT_GRAY16BE = PixFmtGray16be
  PIX_FMT_GRAY16LE = PixFmtGray16le
  PIX_FMT_GRAY8 = PixFmtGray8
  PIX_FMT_MONOBLACK = PixFmtMonoblack
  PIX_FMT_MONOWHITE = PixFmtMonowhite
  PIX_FMT_NONE = PixFmtNone
  PIX_FMT_NV12 = PixFmtNv12
  PIX_FMT_NV21 = PixFmtNv21
  PIX_FMT_PAL8 = PixFmtPal8
  PIX_FMT_RGB24 = PixFmtRgb24
  PIX_FMT_RGB4 = PixFmtRgb4
  PIX_FMT_RGB444BE = PixFmtRgb444be
  PIX_FMT_RGB444LE = PixFmtRgb444le
  PIX_FMT_RGB48BE = PixFmtRgb48be
  PIX_FMT_RGB48LE = PixFmtRgb48le
  PIX_FMT_RGB4_BYTE = PixFmtRgb4Byte
  PIX_FMT_RGB555BE = PixFmtRgb555be
  PIX_FMT_RGB555LE = PixFmtRgb555le
  PIX_FMT_RGB565BE = PixFmtRgb565be
  PIX_FMT_RGB565LE = PixFmtRgb565le
  PIX_FMT_RGB8 = PixFmtRgb8
  PIX_FMT_RGBA = PixFmtRgba
  PIX_FMT_UYVY422 = PixFmtUyvy422
  PIX_FMT_UYYVYY411 = PixFmtUyyvyy411
  PIX_FMT_VAAPI_IDCT = PixFmtVaapiIdct
  PIX_FMT_VAAPI_MOCO = PixFmtVaapiMoco
  PIX_FMT_VAAPI_VLD = PixFmtVaapiVld
  PIX_FMT_VDPAU_H264 = PixFmtVdpauH264
  PIX_FMT_VDPAU_MPEG1 = PixFmtVdpauMpeg1
  PIX_FMT_VDPAU_MPEG2 = PixFmtVdpauMpeg2
  PIX_FMT_VDPAU_MPEG4 = PixFmtVdpauMpeg4
  PIX_FMT_VDPAU_VC1 = PixFmtVdpauVc1
  PIX_FMT_VDPAU_WMV3 = PixFmtVdpauWmv3
  PIX_FMT_XVMC_MPEG2_IDCT = PixFmtXvmcMpeg2Idct
  PIX_FMT_XVMC_MPEG2_MC = PixFmtXvmcMpeg2Mc
  PIX_FMT_Y400A = PixFmtY400a
  PIX_FMT_YUV410P = PixFmtYuv410p
  PIX_FMT_YUV411P = PixFmtYuv411p
  PIX_FMT_YUV420P = PixFmtYuv420p
  PIX_FMT_YUV420P16BE = PixFmtYuv420p16be
  PIX_FMT_YUV420P16LE = PixFmtYuv420p16le
  PIX_FMT_YUV422P = PixFmtYuv422p
  PIX_FMT_YUV422P16BE = PixFmtYuv422p16be
  PIX_FMT_YUV422P16LE = PixFmtYuv422p16le
  PIX_FMT_YUV440P = PixFmtYuv440p
  PIX_FMT_YUV444P = PixFmtYuv444p
  PIX_FMT_YUV444P16BE = PixFmtYuv444p16be
  PIX_FMT_YUV444P16LE = PixFmtYuv444p16le
  PIX_FMT_YUVA420P = PixFmtYuva420p
  PIX_FMT_YUVJ420P = PixFmtYuvj420p
  PIX_FMT_YUVJ422P = PixFmtYuvj422p
  PIX_FMT_YUVJ440P = PixFmtYuvj440p
  PIX_FMT_YUVJ444P = PixFmtYuvj444p
  PIX_FMT_YUYV422 = PixFmtYuyv422
  fromC(I)Lau/notzed/jjmpeg/PixelFormat; = FromC(int)
  toC()I = ToC()
  toC(Lau/notzed/jjmpeg/PixelFormat;)I = ToC(AU.Notzed.Jjmpeg.PixelFormat)
  valueOf(Ljava/lang/String;)Lau/notzed/jjmpeg/PixelFormat; = ValueOf(string)
  values()[Lau/notzed/jjmpeg/PixelFormat; = Values()
au/notzed/jjmpeg/ReSampleContext = AU.Notzed.Jjmpeg.ReSampleContext
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  close()V = Close()
  create(IIIILau/notzed/jjmpeg/SampleFormat;Lau/notzed/jjmpeg/SampleFormat;IIID)Lau/notzed/jjmpeg/ReSampleContext; = Create(int, int, int, int, AU.Notzed.Jjmpeg.SampleFormat, AU.Notzed.Jjmpeg.SampleFormat, int, int, int, double)
  dispose()V = Dispose()
  resampleClose()V = ResampleClose()
  resampleInit(IIIILau/notzed/jjmpeg/SampleFormat;Lau/notzed/jjmpeg/SampleFormat;IIID)Lau/notzed/jjmpeg/ReSampleContext; = ResampleInit(int, int, int, int, AU.Notzed.Jjmpeg.SampleFormat, AU.Notzed.Jjmpeg.SampleFormat, int, int, int, double)
au/notzed/jjmpeg/SampleFormat = AU.Notzed.Jjmpeg.SampleFormat
  SAMPLE_FMT_DBL = SampleFmtDbl
  SAMPLE_FMT_FLT = SampleFmtFlt
  SAMPLE_FMT_NONE = SampleFmtNone
  SAMPLE_FMT_S16 = SampleFmtS16
  SAMPLE_FMT_S32 = SampleFmtS32
  SAMPLE_FMT_U8 = SampleFmtU8
  getByteSize()I = ByteSize
  fromC(I)Lau/notzed/jjmpeg/SampleFormat; = FromC(int)
  getBuffer(Ljava/nio/ByteBuffer;)Ljava/nio/Buffer; = GetBuffer(Java.Nio.ByteBuffer)
  toC()I = ToC()
  toC(Lau/notzed/jjmpeg/SampleFormat;)I = ToC(AU.Notzed.Jjmpeg.SampleFormat)
  valueOf(Ljava/lang/String;)Lau/notzed/jjmpeg/SampleFormat; = ValueOf(string)
  values()[Lau/notzed/jjmpeg/SampleFormat; = Values()
au/notzed/jjmpeg/SwrContext = AU.Notzed.Jjmpeg.SwrContext
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  convert(Lau/notzed/jjmpeg/AVFrame;Lau/notzed/jjmpeg/AVFrame;)I = Convert(AU.Notzed.Jjmpeg.AVFrame, AU.Notzed.Jjmpeg.AVFrame)
  create(JLau/notzed/jjmpeg/SampleFormat;IJLau/notzed/jjmpeg/SampleFormat;I)Lau/notzed/jjmpeg/SwrContext; = Create(long, AU.Notzed.Jjmpeg.SampleFormat, int, long, AU.Notzed.Jjmpeg.SampleFormat, int)
  dispose()V = Dispose()
  setCompensation(II)I = SetCompensation(int, int)
au/notzed/jjmpeg/SwsContext = AU.Notzed.Jjmpeg.SwsContext
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  SWS_AREA = SwsArea
  SWS_BICUBIC = SwsBicubic
  SWS_BICUBLIN = SwsBicublin
  SWS_BILINEAR = SwsBilinear
  SWS_FAST_BILINEAR = SwsFastBilinear
  SWS_GAUSS = SwsGauss
  SWS_LANCZOS = SwsLanczos
  SWS_POINT = SwsPoint
  SWS_SINC = SwsSinc
  SWS_SPLINE = SwsSpline
  SWS_X = SwsX
  create(IILau/notzed/jjmpeg/PixelFormat;IILau/notzed/jjmpeg/PixelFormat;I)Lau/notzed/jjmpeg/SwsContext; = Create(int, int, AU.Notzed.Jjmpeg.PixelFormat, int, int, AU.Notzed.Jjmpeg.PixelFormat, int)
  dispose()V = Dispose()
  freeContext()V = FreeContext()
  scale(Lau/notzed/jjmpeg/AVFrame;IILau/notzed/jjmpeg/AVFrame;)I = Scale(AU.Notzed.Jjmpeg.AVFrame, int, int, AU.Notzed.Jjmpeg.AVFrame)
  scale(Lau/notzed/jjmpeg/AVFrame;II[B)I = Scale(AU.Notzed.Jjmpeg.AVFrame, int, int, byte[])
  scale(Lau/notzed/jjmpeg/AVFrame;II[I)I = Scale(AU.Notzed.Jjmpeg.AVFrame, int, int, int[])
au/notzed/jjmpeg/SwsFilter = AU.Notzed.Jjmpeg.SwsFilter
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  dispose()V = Dispose()
veg/mediacapture/sdk/api/ThreadHelper = Veg.Mediacapture.Sdk.Api.ThreadHelper
  <init>()V = .ctor()
  is_running()Z = Is_running()
  is_started()Z = Is_started()
  run()V = Run()
  runt()V = Runt()
  sleep(J)V = Sleep(long)
  start()V = Start()
  stop(J)V = Stop(long)
  wakeup()V = Wakeup()
veg/mediacapture/sdk/api/Utils = Veg.Mediacapture.Sdk.Api.Utils
  <init>()V = .ctor()
  bytesToHex([B)Ljava/lang/String; = BytesToHex(byte[])
  getIPAddress(Z)Ljava/lang/String; = GetIPAddress(bool)
  getMACAddress(Ljava/lang/String;)Ljava/lang/String; = GetMACAddress(string)
  getUTF8Bytes(Ljava/lang/String;)[B = GetUTF8Bytes(string)
  loadFileAsString(Ljava/lang/String;)Ljava/lang/String; = LoadFileAsString(string)
veg/mediacapture/sdk/BuildConfig = Veg.Mediacapture.Sdk.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
veg/mediacapture/sdk/camera/Camera2APIImpl = Veg.Mediacapture.Sdk.Camera.Camera2APIImpl
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/hardware/camera2/CameraDevice;)V = .ctor(Android.Content.Context, Android.Hardware.Camera2.CameraDevice)
  getMaxZoom()I = MaxZoom
  getNumberOfCameras()I = NumberOfCameras
  getPreferredPreviewSizeForVideo()Lveg/mediacapture/sdk/camera/CameraService$Size; = PreferredPreviewSizeForVideo
  getSupportedFocusModes()Ljava/util/List; = SupportedFocusModes
  getSupportedPreviewFpsRange()Ljava/util/List; = SupportedPreviewFpsRange
  getSupportedPreviewSizes()Ljava/util/List; = SupportedPreviewSizes
  getSupportedVideoSizes()Ljava/util/List; = SupportedVideoSizes
  getZoomRatios()Ljava/util/List; = ZoomRatios
  bindToMediaRecorder(Landroid/media/MediaRecorder;)V = BindToMediaRecorder(Android.Media.MediaRecorder)
  close()V = Close()
  flatten()Ljava/lang/String; = Flatten()
  getCameraInfoByNumber(I)Lveg/mediacapture/sdk/camera/CameraService$CameraInfo; = GetCameraInfoByNumber(int)
  getCameraTypeByNumber(I)Lveg/mediacapture/sdk/camera/CameraService$Facing; = GetCameraTypeByNumber(int)
  getOrientation(I)I = GetOrientation(int)
  isFlashModeSupported()Ljava/lang/Boolean; = IsFlashModeSupported()
  isSmoothZoomSupported()Ljava/lang/Boolean; = IsSmoothZoomSupported()
  isZoomSupported()Ljava/lang/Boolean; = IsZoomSupported()
  open(I)Lveg/mediacapture/sdk/camera/CameraService; = Open(int)
  open(ILveg/mediacapture/sdk/camera/CameraService$StateCallback;)Lveg/mediacapture/sdk/camera/CameraService; = Open(int, Veg.Mediacapture.Sdk.Camera.CameraServiceStateCallback)
  setDirectParam(Ljava/lang/String;Ljava/lang/String;)V = SetDirectParam(string, string)
  setDisplayOrientation(I)V = SetDisplayOrientation(int)
  setFlashMode(Lveg/mediacapture/sdk/camera/CameraService$FlashMode;)V = SetFlashMode(Veg.Mediacapture.Sdk.Camera.CameraServiceFlashMode)
  setFocusMode(Lveg/mediacapture/sdk/camera/CameraService$FocusMode;)V = SetFocusMode(Veg.Mediacapture.Sdk.Camera.CameraServiceFocusMode)
  setPreviewDisplay(Landroid/view/SurfaceHolder;)V = SetPreviewDisplay(Android.Views.ISurfaceHolder)
  setPreviewSize(II)V = SetPreviewSize(int, int)
  setPreviewTexture(Landroid/graphics/SurfaceTexture;)V = SetPreviewTexture(Android.Graphics.SurfaceTexture)
  setRotation(I)V = SetRotation(int)
  setZoom(I)V = SetZoom(int)
  startPreview()V = StartPreview()
  stop(Ljava/lang/Boolean;)V = Stop(Java.Lang.Boolean)
  stopPreview()V = StopPreview()
  unlock()V = Unlock()
veg/mediacapture/sdk/camera/CameraAPIImpl = Veg.Mediacapture.Sdk.Camera.CameraAPIImpl
  <init>()V = .ctor()
  <init>(Landroid/hardware/Camera;)V = .ctor(Android.Hardware.Camera)
  getMaxZoom()I = MaxZoom
  getNumberOfCameras()I = NumberOfCameras
  getPreferredPreviewSizeForVideo()Lveg/mediacapture/sdk/camera/CameraService$Size; = PreferredPreviewSizeForVideo
  getSupportedFocusModes()Ljava/util/List; = SupportedFocusModes
  getSupportedPreviewFpsRange()Ljava/util/List; = SupportedPreviewFpsRange
  getSupportedPreviewSizes()Ljava/util/List; = SupportedPreviewSizes
  getSupportedVideoSizes()Ljava/util/List; = SupportedVideoSizes
  getZoomRatios()Ljava/util/List; = ZoomRatios
  bindToMediaRecorder(Landroid/media/MediaRecorder;)V = BindToMediaRecorder(Android.Media.MediaRecorder)
  close()V = Close()
  flatten()Ljava/lang/String; = Flatten()
  getCameraInfoByNumber(I)Lveg/mediacapture/sdk/camera/CameraService$CameraInfo; = GetCameraInfoByNumber(int)
  getCameraTypeByNumber(I)Lveg/mediacapture/sdk/camera/CameraService$Facing; = GetCameraTypeByNumber(int)
  getOrientation(I)I = GetOrientation(int)
  isFlashModeSupported()Ljava/lang/Boolean; = IsFlashModeSupported()
  isSmoothZoomSupported()Ljava/lang/Boolean; = IsSmoothZoomSupported()
  isZoomSupported()Ljava/lang/Boolean; = IsZoomSupported()
  open(I)Lveg/mediacapture/sdk/camera/CameraService; = Open(int)
  open(ILveg/mediacapture/sdk/camera/CameraService$StateCallback;)Lveg/mediacapture/sdk/camera/CameraService; = Open(int, Veg.Mediacapture.Sdk.Camera.CameraServiceStateCallback)
  setDirectParam(Ljava/lang/String;Ljava/lang/String;)V = SetDirectParam(string, string)
  setDisplayOrientation(I)V = SetDisplayOrientation(int)
  setFlashMode(Lveg/mediacapture/sdk/camera/CameraService$FlashMode;)V = SetFlashMode(Veg.Mediacapture.Sdk.Camera.CameraServiceFlashMode)
  setFocusMode(Lveg/mediacapture/sdk/camera/CameraService$FocusMode;)V = SetFocusMode(Veg.Mediacapture.Sdk.Camera.CameraServiceFocusMode)
  setPreviewDisplay(Landroid/view/SurfaceHolder;)V = SetPreviewDisplay(Android.Views.ISurfaceHolder)
  setPreviewSize(II)V = SetPreviewSize(int, int)
  setPreviewTexture(Landroid/graphics/SurfaceTexture;)V = SetPreviewTexture(Android.Graphics.SurfaceTexture)
  setRotation(I)V = SetRotation(int)
  setZoom(I)V = SetZoom(int)
  startPreview()V = StartPreview()
  stop(Ljava/lang/Boolean;)V = Stop(Java.Lang.Boolean)
  stopPreview()V = StopPreview()
  unlock()V = Unlock()
veg/mediacapture/sdk/camera/CameraService = Veg.Mediacapture.Sdk.Camera.ICameraService
  getMaxZoom()I = MaxZoom
  getNumberOfCameras()I = NumberOfCameras
  getPreferredPreviewSizeForVideo()Lveg/mediacapture/sdk/camera/CameraService$Size; = PreferredPreviewSizeForVideo
  getSupportedFocusModes()Ljava/util/List; = SupportedFocusModes
  getSupportedPreviewFpsRange()Ljava/util/List; = SupportedPreviewFpsRange
  getSupportedPreviewSizes()Ljava/util/List; = SupportedPreviewSizes
  getSupportedVideoSizes()Ljava/util/List; = SupportedVideoSizes
  getZoomRatios()Ljava/util/List; = ZoomRatios
  bindToMediaRecorder(Landroid/media/MediaRecorder;)V = BindToMediaRecorder(Android.Media.MediaRecorder)
  close()V = Close()
  flatten()Ljava/lang/String; = Flatten()
  getCameraInfoByNumber(I)Lveg/mediacapture/sdk/camera/CameraService$CameraInfo; = GetCameraInfoByNumber(int)
  getCameraTypeByNumber(I)Lveg/mediacapture/sdk/camera/CameraService$Facing; = GetCameraTypeByNumber(int)
  getOrientation(I)I = GetOrientation(int)
  isFlashModeSupported()Ljava/lang/Boolean; = IsFlashModeSupported()
  isSmoothZoomSupported()Ljava/lang/Boolean; = IsSmoothZoomSupported()
  isZoomSupported()Ljava/lang/Boolean; = IsZoomSupported()
  open(I)Lveg/mediacapture/sdk/camera/CameraService; = Open(int)
  open(ILveg/mediacapture/sdk/camera/CameraService$StateCallback;)Lveg/mediacapture/sdk/camera/CameraService; = Open(int, Veg.Mediacapture.Sdk.Camera.CameraServiceStateCallback)
  setDirectParam(Ljava/lang/String;Ljava/lang/String;)V = SetDirectParam(string, string)
  setDisplayOrientation(I)V = SetDisplayOrientation(int)
  setFlashMode(Lveg/mediacapture/sdk/camera/CameraService$FlashMode;)V = SetFlashMode(Veg.Mediacapture.Sdk.Camera.CameraServiceFlashMode)
  setFocusMode(Lveg/mediacapture/sdk/camera/CameraService$FocusMode;)V = SetFocusMode(Veg.Mediacapture.Sdk.Camera.CameraServiceFocusMode)
  setPreviewDisplay(Landroid/view/SurfaceHolder;)V = SetPreviewDisplay(Android.Views.ISurfaceHolder)
  setPreviewSize(II)V = SetPreviewSize(int, int)
  setPreviewTexture(Landroid/graphics/SurfaceTexture;)V = SetPreviewTexture(Android.Graphics.SurfaceTexture)
  setRotation(I)V = SetRotation(int)
  setZoom(I)V = SetZoom(int)
  startPreview()V = StartPreview()
  stop(Ljava/lang/Boolean;)V = Stop(Java.Lang.Boolean)
  stopPreview()V = StopPreview()
  unlock()V = Unlock()
veg/mediacapture/sdk/camera/CameraServiceFactory = Veg.Mediacapture.Sdk.Camera.CameraServiceFactory
  <init>()V = .ctor()
  build(Landroid/content/Context;ILjava/lang/Object;)Lveg/mediacapture/sdk/camera/CameraService; = Build(Android.Content.Context, int, Java.Lang.Object)
veg/mediacapture/sdk/camera/ExternalCameraDelegate = Veg.Mediacapture.Sdk.Camera.IExternalCameraDelegate
  requestCamera()Ljava/lang/Object; = RequestCamera()
veg/mediacapture/sdk/DebugGuard = Veg.Mediacapture.Sdk.DebugGuard
  <init>()V = .ctor()
  EXTERNAL_LOAD_LIBRARY = ExternalLoadLibrary
  LOG = Log
  X64_LOAD_LIBRARY = X64LoadLibrary
veg/mediacapture/sdk/InternalDataCallback = Veg.Mediacapture.Sdk.IInternalDataCallback
  OnCameraDied()V = OnCameraDied()
  OnCameraSurfaceChanged(Landroid/graphics/SurfaceTexture;II)V = OnCameraSurfaceChanged(Android.Graphics.SurfaceTexture, int, int)
  OnCameraSurfaceReady(Landroid/graphics/SurfaceTexture;)V = OnCameraSurfaceReady(Android.Graphics.SurfaceTexture)
  OnMediaCodecFrame(IILjava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)V = OnMediaCodecFrame(int, int, Java.Nio.ByteBuffer, Android.Media.MediaCodec.BufferInfo)
  OnMediaFrameAudio(Lveg/mediacapture/sdk/streaming/mp4/AudioPacket;)V = OnMediaFrameAudio(Veg.Mediacapture.Sdk.Streaming.Mp4.AudioPacket)
  OnMediaFrameVideo(Lveg/mediacapture/sdk/streaming/mp4/VideoFrame;)V = OnMediaFrameVideo(Veg.Mediacapture.Sdk.Streaming.Mp4.VideoFrame)
  OnRenderStateChanged(I)V = OnRenderStateChanged(int)
  OnRequestExternalCamera()Ljava/lang/Object; = OnRequestExternalCamera()
  OnUpdateDuration(JZ)V = OnUpdateDuration(long, bool)
veg/mediacapture/sdk/MediaCapture = Veg.Mediacapture.Sdk.MediaCapture
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;Z)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, bool)
  DISABLE_CAMERA = DisableCamera
  FILTER_BLACK_WHITE = FilterBlackWhite
  FILTER_BLUR = FilterBlur
  FILTER_EDGE_DETECT = FilterEdgeDetect
  FILTER_EMBOSS = FilterEmboss
  FILTER_NONE = FilterNone
  FILTER_SHARPEN = FilterSharpen
  handler_msg = HandlerMsg
  LOG_LEVEL = LogLevel
  MAX_DURATION_RESTART_SEC = MaxDurationRestartSec
  mCachedLicense = MCachedLicense
  mCachedLicenseName = MCachedLicenseName
  mCallback = MCallback
  mCaptureThread = MCaptureThread
  mConfig = MConfig
  mContext = MContext
  mIS_WINDOW = MISWINDOW
  mLicenseBytes = MLicenseBytes
  mMediaExtractorThread = MMediaExtractorThread
  MNEW_VERSION = MnewVersion
  mPackageName = MPackageName
  m_record_new_segment = MRecordNewSegment
  m_record_new_segment_sec = MRecordNewSegmentSec
  mSecMediaExtractorThread = MSecMediaExtractorThread
  MSG_APP_DURATION_CHANGE = MsgAppDurationChange
  MSG_APP_REC_STATE = MsgAppRecState
  MSG_APP_REC_STATE_START = MsgAppRecStateStart
  MSG_APP_SERVICE_DOCUMENT_STATE = MsgAppServiceDocumentState
  MSG_APP_SERVICE_STATE = MsgAppServiceState
  MSG_APP_SERVICE_STORAGE = MsgAppServiceStorage
  MSG_APP_SERVICE_WAIT_FINISH = MsgAppServiceWaitFinish
  MSG_APP_STORAGE_PREPARE = MsgAppStoragePrepare
  MSG_APP_ZOOM_STATE = MsgAppZoomState
  MSG_CAPTURE_NOTIFY_CODE = MsgCaptureNotifyCode
  MSG_SET_SURFACE_TEXTURE = MsgSetSurfaceTexture
  MSG_SET_SURFACE_TEXTURE_CHANGED = MsgSetSurfaceTextureChanged
  PERMISSION_CODE = PermissionCode
  sNETWORK_ON = SNETWORKON
  SOURCE_AUDIO_PUSH = SourceAudioPush
  sRECORDING_ON = SRECORDINGON
  sREC_STATUS = SRECSTATUS
  sREC_STATUS_SEC = SRECSTATUSSEC
  sSTREAM_STATUS = SSTREAMSTATUS
  sSTREAM_STATUS_RTSP = SSTREAMSTATUSRTSP
  sSTREAM_STATUS_SEC = SSTREAMSTATUSSEC
  stat_duration = StatDuration
  stat_duration_sec = StatDurationSec
  stat_duration_total = StatDurationTotal
  stat_duration_total_sec = StatDurationTotalSec
  stat_file_name = StatFileName
  stat_file_name_sec = StatFileNameSec
  stat_file_name_stopped = StatFileNameStopped
  stat_file_name_stopped_sec = StatFileNameStoppedSec
  stat_file_size = StatFileSize
  stat_file_size_sec = StatFileSizeSec
  stat_file_size_total = StatFileSizeTotal
  stat_file_size_total_sec = StatFileSizeTotalSec
  USE_FFMPEG_0_10 = UseFfmpeg010
  USE_RTSP_SERVER = UseRtspServer
  waitStartOpenThread = WaitStartOpenThread
  getAudioPackets()I = AudioPackets
  getAudioShare_AudioFormat()I = AudioShare_AudioFormat
  getAudioShare_BufferSize()I = AudioShare_BufferSize
  getAudioShare_Channels()I = AudioShare_Channels
  getAudioShare_SampleRate()I = AudioShare_SampleRate
  getAudioShare_Source()I = AudioShare_Source
  getConfig()Lveg/mediacapture/sdk/MediaCaptureConfig; = Config
  getDuration()J = Duration
  getFlash()Z = Flash
  setFlash(Z)V = Flash
  isAudioShare()Z = IsAudioShare
  isRecordingPaused()Z = IsRecordingPaused
  isUseTimeshift()Z = IsUseTimeshift
  getLastAudioPTS()J = LastAudioPTS
  getLastVideoPTS()J = LastVideoPTS
  getLibVersion()Ljava/lang/String; = LibVersion
  getLicense()Ljava/lang/String; = License
  getPath()Ljava/lang/String; = Path
  getRECStatus()I = RECStatus
  getRECStatusSec()I = RECStatusSec
  getRTMPStatus()I = RTMPStatus
  getRTSPAddr()Ljava/lang/String; = RTSPAddr
  getState()Lveg/mediacapture/sdk/MediaCapture$CaptureState; = State
  getStatReconnectCount()I = StatReconnectCount
  getStreamStatus()I = StreamStatus
  getStreamStatusSec()I = StreamStatusSec
  getSurface()Landroid/view/Surface; = Surface
  getSurfaceView()Landroid/view/SurfaceView; = SurfaceView
  getVideoPackets()I = VideoPackets
  getZoom()I = Zoom
  setZoom(I)V = Zoom
  ApplyVideoBitrate(IZ)V = ApplyVideoBitrate(int, bool)
  cameraSurfaceReady(Landroid/graphics/SurfaceTexture;)V = CameraSurfaceReady(Android.Graphics.SurfaceTexture)
  Close()V = Close()
  get_clip_str(J)Ljava/lang/String; = Get_clip_str(long)
  get_clip_str2(J)Ljava/lang/String; = Get_clip_str2(long)
  get_clip_str3(J)Ljava/lang/String; = Get_clip_str3(long)
  getAudioPackets(IZ)I = GetAudioPackets(int, bool)
  getLastAudioPTS(IZ)J = GetLastAudioPTS(int, bool)
  getLastVideoPTS(IZ)J = GetLastVideoPTS(int, bool)
  getPropLong(I)J = GetPropLong(int)
  getPropString(I)Ljava/lang/String; = GetPropString(int)
  getRTSPBitRate(I)I = GetRTSPBitRate(int)
  getRTSPClients(I)[Ljava/lang/String; = GetRTSPClients(int)
  getRTSPFps(I)I = GetRTSPFps(int)
  getSPSPPSsize([B)I = GetSPSPPSsize(byte[])
  getStatReconnectCount(IZ)I = GetStatReconnectCount(int, bool)
  getStreamStatus(I)I = GetStreamStatus(int)
  getVideoPackets(IZ)I = GetVideoPackets(int, bool)
  indexOf([BI[B)I = IndexOf(byte[], int, byte[])
  OnCameraDied()V = OnCameraDied()
  OnCameraSurfaceChanged(Landroid/graphics/SurfaceTexture;II)V = OnCameraSurfaceChanged(Android.Graphics.SurfaceTexture, int, int)
  OnCameraSurfaceReady(Landroid/graphics/SurfaceTexture;)V = OnCameraSurfaceReady(Android.Graphics.SurfaceTexture)
  onDestroy()V = OnDestroy()
  onFrameAvailable(Landroid/graphics/SurfaceTexture;)V = OnFrameAvailable(Android.Graphics.SurfaceTexture)
  OnMediaCodecFrame(IILjava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)V = OnMediaCodecFrame(int, int, Java.Nio.ByteBuffer, Android.Media.MediaCodec.BufferInfo)
  OnMediaFrameAudio(Lveg/mediacapture/sdk/streaming/mp4/AudioPacket;)V = OnMediaFrameAudio(Veg.Mediacapture.Sdk.Streaming.Mp4.AudioPacket)
  OnMediaFrameVideo(Lveg/mediacapture/sdk/streaming/mp4/VideoFrame;)V = OnMediaFrameVideo(Veg.Mediacapture.Sdk.Streaming.Mp4.VideoFrame)
  onPause()V = OnPause()
  OnRenderStateChanged(I)V = OnRenderStateChanged(int)
  OnRequestExternalCamera()Ljava/lang/Object; = OnRequestExternalCamera()
  onResume()V = OnResume()
  onStart()V = OnStart()
  onStop()V = OnStop()
  OnUpdateDuration(JZ)V = OnUpdateDuration(long, bool)
  Open(Lveg/mediacapture/sdk/MediaCaptureConfig;Lveg/mediacapture/sdk/MediaCaptureCallback;)I = Open(Veg.Mediacapture.Sdk.MediaCaptureConfig, Veg.Mediacapture.Sdk.IMediaCaptureCallback)
  Open(Lveg/mediacapture/sdk/MediaCaptureConfig;Lveg/mediacapture/sdk/MediaCaptureCallback;Lveg/mediacapture/sdk/camera/ExternalCameraDelegate;)I = Open(Veg.Mediacapture.Sdk.MediaCaptureConfig, Veg.Mediacapture.Sdk.IMediaCaptureCallback, Veg.Mediacapture.Sdk.Camera.IExternalCameraDelegate)
  PauseRecording()V = PauseRecording()
  pushAudioSharePacket(Ljava/nio/ByteBuffer;IJ)I = PushAudioSharePacket(Java.Nio.ByteBuffer, int, long)
  RequestPermission(Landroid/content/Context;I)V = RequestPermission(Android.Content.Context, int)
  ResumeRecording()V = ResumeRecording()
  setCameraPreviewSize(II)I = SetCameraPreviewSize(int, int)
  setCameraPreviewViewport(IIII)I = SetCameraPreviewViewport(int, int, int, int)
  setMulticast(ZLjava/lang/String;I)V = SetMulticast(bool, string, int)
  SetPermissionRequestResults(ILandroid/content/Intent;)V = SetPermissionRequestResults(int, Android.Content.Intent)
  SetRecordingNewSegment()V = SetRecordingNewSegment()
  SetRecordingNewSegmentSec()V = SetRecordingNewSegmentSec()
  Start()V = Start()
  startAudioShare(IIIIILveg/mediacapture/sdk/MediaCaptureCallback;)I = StartAudioShare(int, int, int, int, int, Veg.Mediacapture.Sdk.IMediaCaptureCallback)
  startAudioShare(Lveg/mediacapture/sdk/MediaCaptureCallback;)I = StartAudioShare(Veg.Mediacapture.Sdk.IMediaCaptureCallback)
  StartRecording()V = StartRecording()
  StartRecordingSec()V = StartRecordingSec()
  StartStreaming()V = StartStreaming()
  StartStreaming(I)V = StartStreaming(int)
  StartStreamingSec()V = StartStreamingSec()
  StartStreamingSec(I)V = StartStreamingSec(int)
  StartTranscoding()V = StartTranscoding()
  Stop()V = Stop()
  stopAudioShare(Lveg/mediacapture/sdk/MediaCaptureCallback;)I = StopAudioShare(Veg.Mediacapture.Sdk.IMediaCaptureCallback)
  StopRecording()V = StopRecording()
  StopRecordingSec()V = StopRecordingSec()
  StopStreaming()V = StopStreaming()
  StopStreaming(I)V = StopStreaming(int)
  StopStreamingSec()V = StopStreamingSec()
  StopStreamingSec(I)V = StopStreamingSec(int)
  StopTranscoding()V = StopTranscoding()
  surfaceChanged(Landroid/view/SurfaceHolder;III)V = SurfaceChanged(Android.Views.ISurfaceHolder, Android.Graphics.Format, int, int)
  surfaceCreated(Landroid/view/SurfaceHolder;)V = SurfaceCreated(Android.Views.ISurfaceHolder)
  surfaceDestroyed(Landroid/view/SurfaceHolder;)V = SurfaceDestroyed(Android.Views.ISurfaceHolder)
  TakeScreenshotBitmap()Landroid/graphics/Bitmap; = TakeScreenshotBitmap()
  TakeScreenshotImage()Landroid/media/Image; = TakeScreenshotImage()
veg/mediacapture/sdk/MediaCaptureCallback = Veg.Mediacapture.Sdk.IMediaCaptureCallback
  OnCaptureReceiveData(Ljava/nio/ByteBuffer;IIJ)I = OnCaptureReceiveData(Java.Nio.ByteBuffer, int, int, long)
  OnCaptureStatus(I)I = OnCaptureStatus(int)
veg/mediacapture/sdk/MediaCaptureConfig = Veg.Mediacapture.Sdk.MediaCaptureConfig
  <init>()V = .ctor()
  <init>(Lveg/mediacapture/sdk/MediaCaptureConfig;)V = .ctor(Veg.Mediacapture.Sdk.MediaCaptureConfig)
  AudioFormatMC = AudioFormatMC
  AVCProfileBaseline = AVCProfileBaseline
  AVCProfileHigh = AVCProfileHigh
  AVCProfileMain = AVCProfileMain
  BITRATE_MODE_ADAPTIVE = BitrateModeAdaptive
  BITRATE_MODE_CBR = BitrateModeCbr
  BITRATE_MODE_CQ = BitrateModeCq
  BITRATE_MODE_VBR = BitrateModeVbr
  CAMERA_FACING_BACK = CameraFacingBack
  CAMERA_FACING_FRONT = CameraFacingFront
  CAMERA_FILTER_CUSTOM_FRAGMENT_SHADER = CameraFilterCustomFragmentShader
  CAMERA_FILTER_CUSTOM_VERTEX_SHADER = CameraFilterCustomVertexShader
  CAMERA_FILTER_FLIP_X = CameraFilterFlipX
  CAMERA_FILTER_NONE = CameraFilterNone
  LOG_LEVEL = LogLevel
  MAX_STREAMER_TYPES = MaxStreamerTypes
  MC_ORIENTATION_LANDSCAPE = McOrientationLandscape
  MC_ORIENTATION_PORTRAIT = McOrientationPortrait
  TextFormatMC = TextFormatMC
  TYPE_AUDIO_AAC = TypeAudioAac
  TYPE_AUDIO_AC3 = TypeAudioAc3
  TYPE_AUDIO_AMR_N = TypeAudioAmrN
  TYPE_AUDIO_AMR_WB = TypeAudioAmrWb
  TYPE_AUDIO_EAC3 = TypeAudioEac3
  TYPE_AUDIO_FLAC = TypeAudioFlac
  TYPE_AUDIO_G711_ALAW = TypeAudioG711Alaw
  TYPE_AUDIO_G711_MLAW = TypeAudioG711Mlaw
  TYPE_AUDIO_MPEG = TypeAudioMpeg
  TYPE_AUDIO_MSGSM = TypeAudioMsgsm
  TYPE_AUDIO_OPUS = TypeAudioOpus
  TYPE_AUDIO_QCELP = TypeAudioQcelp
  TYPE_AUDIO_RAW = TypeAudioRaw
  TYPE_AUDIO_VORBIS = TypeAudioVorbis
  TYPE_TEXT_CEA_608 = TypeTextCea608
  TYPE_TEXT_VTT = TypeTextVtt
  TYPE_VIDEO_AVC = TypeVideoAvc
  TYPE_VIDEO_H263 = TypeVideoH263
  TYPE_VIDEO_HEVC = TypeVideoHevc
  TYPE_VIDEO_MPEG2 = TypeVideoMpeg2
  TYPE_VIDEO_MPEG4 = TypeVideoMpeg4
  TYPE_VIDEO_RAW = TypeVideoRaw
  TYPE_VIDEO_VP8 = TypeVideoVp8
  TYPE_VIDEO_VP9 = TypeVideoVp9
  videoCustomHeight = VideoCustomHeight
  videoCustomWidth = VideoCustomWidth
  VideoFormatMC = VideoFormatMC
  videoTimestampType = VideoTimestampType
  getAudioBitrate()I = AudioBitrate
  setAudioBitrate(I)V = AudioBitrate
  getAudioCaptureVolume()F = AudioCaptureVolume
  setAudioCaptureVolume(F)V = AudioCaptureVolume
  getAudioChannels()I = AudioChannels
  setAudioChannels(I)V = AudioChannels
  getAudioFormat()Ljava/lang/String; = AudioFormat
  setAudioFormat(Ljava/lang/String;)V = AudioFormat
  isAudioMute()Z = AudioMute
  setAudioMute(Z)V = AudioMute
  getAudioOutputCapture()Z = AudioOutputCapture
  setAudioOutputCapture(Z)V = AudioOutputCapture
  getAudioOutputCaptureVolume()F = AudioOutputCaptureVolume
  setAudioOutputCaptureVolume(F)V = AudioOutputCaptureVolume
  getAudioSamplingRate()I = AudioSamplingRate
  setAudioSamplingRate(I)V = AudioSamplingRate
  getAudioSource()I = AudioSource
  setAudioSource(I)V = AudioSource
  getCameraApiVersion()I = CameraApiVersion
  setCameraApiVersion(I)V = CameraApiVersion
  getCameraCustomFragmentShader()Ljava/lang/String; = CameraCustomFragmentShader
  setCameraCustomFragmentShader(Ljava/lang/String;)V = CameraCustomFragmentShader
  getCameraCustomVertexShader()Ljava/lang/String; = CameraCustomVertexShader
  setCameraCustomVertexShader(Ljava/lang/String;)V = CameraCustomVertexShader
  getCameraFacing()I = CameraFacing
  setCameraFacing(I)V = CameraFacing
  getCameraFilter()I = CameraFilter
  setCameraFilter(I)V = CameraFilter
  getCaptureMode()I = CaptureMode
  setCaptureMode(I)V = CaptureMode
  getCaptureSource()I = CaptureSource
  setCaptureSource(I)V = CaptureSource
  isCaptureAudio()Z = IsCaptureAudio
  isCaptureVideo()Z = IsCaptureVideo
  getLicenseFileName()Ljava/lang/String; = LicenseFileName
  setLicenseFileName(Ljava/lang/String;)V = LicenseFileName
  getMulticastEnabled()Z = MulticastEnabled
  getMulticastIP()Ljava/lang/String; = MulticastIP
  getMulticastTTL()I = MulticastTTL
  getOverlays()Ljava/util/List; = Overlays
  getPort()I = Port
  getPortSec()I = PortSec
  getPreviewScaleType()I = PreviewScaleType
  setPreviewScaleType(I)V = PreviewScaleType
  getRecordFlags()I = RecordFlags
  setRecordFlags(I)V = RecordFlags
  getRecordFlagsSec()I = RecordFlagsSec
  setRecordFlagsSec(I)V = RecordFlagsSec
  isRecording()Z = Recording
  setRecording(Z)V = Recording
  getRecordPath()Ljava/lang/String; = RecordPath
  setRecordPath(Ljava/lang/String;)V = RecordPath
  getRecordPathSec()Ljava/lang/String; = RecordPathSec
  setRecordPathSec(Ljava/lang/String;)V = RecordPathSec
  getRecordPrefix()Ljava/lang/String; = RecordPrefix
  setRecordPrefix(Ljava/lang/String;)V = RecordPrefix
  getRecordPrefixSec()Ljava/lang/String; = RecordPrefixSec
  setRecordPrefixSec(Ljava/lang/String;)V = RecordPrefixSec
  getRecordSplitSize()I = RecordSplitSize
  setRecordSplitSize(I)V = RecordSplitSize
  getRecordSplitSizeSec()I = RecordSplitSizeSec
  setRecordSplitSizeSec(I)V = RecordSplitSizeSec
  getRecordSplitTime()I = RecordSplitTime
  setRecordSplitTime(I)V = RecordSplitTime
  getRecordSplitTimeSec()I = RecordSplitTimeSec
  setRecordSplitTimeSec(I)V = RecordSplitTimeSec
  getRecordTimeshift()I = RecordTimeshift
  setRecordTimeshift(I)V = RecordTimeshift
  getRecordTimeshiftSec()I = RecordTimeshiftSec
  setRecordTimeshiftSec(I)V = RecordTimeshiftSec
  getSecureStreamingEnabled()Z = SecureStreamingEnabled
  getSecVideoBitrate()I = SecVideoBitrate
  setSecVideoBitrate(I)V = SecVideoBitrate
  getSecVideoFramerate()I = SecVideoFramerate
  setSecVideoFramerate(I)V = SecVideoFramerate
  getSecVideoHeight()I = SecVideoHeight
  getSecVideoKeyFrameInterval()I = SecVideoKeyFrameInterval
  setSecVideoKeyFrameInterval(I)V = SecVideoKeyFrameInterval
  getSecVideoResolution()Lveg/mediacapture/sdk/MediaCaptureConfig$CaptureVideoResolution; = SecVideoResolution
  setSecVideoResolution(Lveg/mediacapture/sdk/MediaCaptureConfig$CaptureVideoResolution;)V = SecVideoResolution
  getSecVideoSrcFilePath()Ljava/lang/String; = SecVideoSrcFilePath
  setSecVideoSrcFilePath(Ljava/lang/String;)V = SecVideoSrcFilePath
  getSecVideoUseSrcFile()Z = SecVideoUseSrcFile
  setSecVideoUseSrcFile(Z)V = SecVideoUseSrcFile
  getSecVideoWidth()I = SecVideoWidth
  getSSLCert()Ljava/lang/String; = SSLCert
  getSSLKey()Ljava/lang/String; = SSLKey
  isStreaming()Z = Streaming
  setStreaming(Z)V = Streaming
  getStreamType()I = StreamType
  setStreamType(I)V = StreamType
  isTranscoding()Z = Transcoding
  setTranscoding(Z)V = Transcoding
  getTransFormat()Ljava/lang/String; = TransFormat
  setTransFormat(Ljava/lang/String;)V = TransFormat
  getTransFps()D = TransFps
  setTransFps(D)V = TransFps
  getTransHeight()I = TransHeight
  setTransHeight(I)V = TransHeight
  getTransType()Lveg/mediacapture/sdk/MediaCaptureConfig$CaptureTransType; = TransType
  setTransType(Lveg/mediacapture/sdk/MediaCaptureConfig$CaptureTransType;)V = TransType
  getTransWidth()I = TransWidth
  setTransWidth(I)V = TransWidth
  getUrl()Ljava/lang/String; = Url
  setUrl(Ljava/lang/String;)V = Url
  getUrlSec()Ljava/lang/String; = UrlSec
  setUrlSec(Ljava/lang/String;)V = UrlSec
  isUseAVSync()Z = UseAVSync
  setUseAVSync(Z)V = UseAVSync
  isUseMainRecording()Z = UseMainRecording
  setUseMainRecording(Z)V = UseMainRecording
  isUseMainStreaming()Z = UseMainStreaming
  setUseMainStreaming(Z)V = UseMainStreaming
  isUseSec()Z = UseSec
  setUseSec(Z)V = UseSec
  isUseSecControl()Z = UseSecControl
  setUseSecControl(Z)V = UseSecControl
  isUseSecRecord()Z = UseSecRecord
  setUseSecRecord(Z)V = UseSecRecord
  isUseSecStreaming()Z = UseSecStreaming
  setUseSecStreaming(Z)V = UseSecStreaming
  getVideoAVCProfile()I = VideoAVCProfile
  setVideoAVCProfile(I)V = VideoAVCProfile
  getVideoBitrate()I = VideoBitrate
  setVideoBitrate(I)V = VideoBitrate
  getVideoBitrateMode()I = VideoBitrateMode
  setVideoBitrateMode(I)V = VideoBitrateMode
  getVideoFramerate()I = VideoFramerate
  setVideoFramerate(I)V = VideoFramerate
  getVideoHeight()I = VideoHeight
  getVideoKeyFrameInterval()I = VideoKeyFrameInterval
  setVideoKeyFrameInterval(I)V = VideoKeyFrameInterval
  getVideoMaxLatency()I = VideoMaxLatency
  setVideoMaxLatency(I)V = VideoMaxLatency
  getVideoOrientation()I = VideoOrientation
  setVideoOrientation(I)V = VideoOrientation
  getVideoPreviewMode()I = VideoPreviewMode
  setVideoPreviewMode(I)V = VideoPreviewMode
  getVideoPreviewModeCustomResolutionHeight()I = VideoPreviewModeCustomResolutionHeight
  getVideoPreviewModeCustomResolutionWidth()I = VideoPreviewModeCustomResolutionWidth
  getVideoResolution()Lveg/mediacapture/sdk/MediaCaptureConfig$CaptureVideoResolution; = VideoResolution
  setVideoResolution(Lveg/mediacapture/sdk/MediaCaptureConfig$CaptureVideoResolution;)V = VideoResolution
  getVideoSecAVCProfile()I = VideoSecAVCProfile
  setVideoSecAVCProfile(I)V = VideoSecAVCProfile
  getVideoSecBitrateMode()I = VideoSecBitrateMode
  setVideoSecBitrateMode(I)V = VideoSecBitrateMode
  getVideoSecMaxLatency()I = VideoSecMaxLatency
  setVideoSecMaxLatency(I)V = VideoSecMaxLatency
  getVideoSrcFilePath()Ljava/lang/String; = VideoSrcFilePath
  setVideoSrcFilePath(Ljava/lang/String;)V = VideoSrcFilePath
  getVideoSupportedRes()Ljava/util/List; = VideoSupportedRes
  setVideoSupportedRes(Ljava/util/List;)V = VideoSupportedRes
  getVideoUseSrcFile()Z = VideoUseSrcFile
  setVideoUseSrcFile(Z)V = VideoUseSrcFile
  getVideoWidth()I = VideoWidth
  _getStreamingOn(IZ)Z = _getStreamingOn(int, bool)
  _setStreamingOn(IZZ)V = _setStreamingOn(int, bool, bool)
  addOverlay(Landroid/graphics/Bitmap;[F)Lveg/mediacapture/sdk/MediaCaptureConfig$Overlay; = AddOverlay(Android.Graphics.Bitmap, float[])
  getPort(I)I = GetPort(int)
  getPortSec(I)I = GetPortSec(int)
  getUrl(I)Ljava/lang/String; = GetUrl(int)
  getUrlSec(I)Ljava/lang/String; = GetUrlSec(int)
  getVideoHeight(Lveg/mediacapture/sdk/MediaCaptureConfig$CaptureVideoResolution;)I = GetVideoHeight(Veg.Mediacapture.Sdk.MediaCaptureConfig.CaptureVideoResolution)
  getVideoTimestampType()Lveg/mediacapture/sdk/MediaCaptureConfig$VideoTimestampType; = GetVideoTimestampType()
  getVideoWidth(Lveg/mediacapture/sdk/MediaCaptureConfig$CaptureVideoResolution;)I = GetVideoWidth(Veg.Mediacapture.Sdk.MediaCaptureConfig.CaptureVideoResolution)
  print()V = Print()
  removeOverlay(Lveg/mediacapture/sdk/MediaCaptureConfig$Overlay;)V = RemoveOverlay(Veg.Mediacapture.Sdk.MediaCaptureConfig.Overlay)
  resetToDefault()V = ResetToDefault()
  setCustomVideoResolution(II)V = SetCustomVideoResolution(int, int)
  setMulticast(ZLjava/lang/String;I)V = SetMulticast(bool, string, int)
  setSecureStreaming(ZLjava/lang/String;Ljava/lang/String;)V = SetSecureStreaming(bool, string, string)
  setUrl(ILjava/lang/String;)V = SetUrl(int, string)
  setUrlSec(ILjava/lang/String;)V = SetUrlSec(int, string)
  setVideoPreviewModeCustomResolution(II)V = SetVideoPreviewModeCustomResolution(int, int)
  setVideoTimestampType(Lveg/mediacapture/sdk/MediaCaptureConfig$VideoTimestampType;)V = SetVideoTimestampType(Veg.Mediacapture.Sdk.MediaCaptureConfig.VideoTimestampType)
veg/mediacapture/sdk/MediaRec = Veg.Mediacapture.Sdk.MediaRec
  <init>()V = .ctor()
  LOG_LEVEL = LogLevel
  TAG = Tag
  isHead()Z = IsHead
  isStarted()Z = IsStarted
  putAudio(Lveg/mediacapture/sdk/streaming/mp4/AudioPacket;)I = PutAudio(Veg.Mediacapture.Sdk.Streaming.Mp4.AudioPacket)
  putHeaderVideo(Ljava/nio/ByteBuffer;)V = PutHeaderVideo(Java.Nio.ByteBuffer)
  putVideo(Lveg/mediacapture/sdk/streaming/mp4/VideoFrame;)I = PutVideo(Veg.Mediacapture.Sdk.Streaming.Mp4.VideoFrame)
  setAudioParams(ZIII)V = SetAudioParams(bool, int, int, int)
  setUrl(Ljava/lang/String;)V = SetUrl(string)
  setVideoParams(IIII)V = SetVideoParams(int, int, int, int)
  start()I = Start()
  stop()V = Stop()
veg/mediacapture/sdk/MediaStreaming = Veg.Mediacapture.Sdk.MediaStreaming
  <init>()V = .ctor()
  LOG_LEVEL = LogLevel
  TAG = Tag
  isHead()Z = IsHead
  isStarted()Z = IsStarted
  getRTSPBitRate(I)I = GetRTSPBitRate(int)
  getRTSPClients(I)[Ljava/lang/String; = GetRTSPClients(int)
  getRTSPFps(I)I = GetRTSPFps(int)
  putAudio(Lveg/mediacapture/sdk/streaming/mp4/AudioPacket;)I = PutAudio(Veg.Mediacapture.Sdk.Streaming.Mp4.AudioPacket)
  putHeaderVideo(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V = PutHeaderVideo(Java.Nio.ByteBuffer, Java.Nio.ByteBuffer)
  putVideo(Lveg/mediacapture/sdk/streaming/mp4/VideoFrame;)I = PutVideo(Veg.Mediacapture.Sdk.Streaming.Mp4.VideoFrame)
  setAudioParams(ZIII)V = SetAudioParams(bool, int, int, int)
  setMulticast(ZLjava/lang/String;I)V = SetMulticast(bool, string, int)
  setSecureStreaming(ZLjava/lang/String;Ljava/lang/String;)V = SetSecureStreaming(bool, string, string)
  setServerType(I)V = SetServerType(int)
  setUrl(Ljava/lang/String;)V = SetUrl(string)
  setVideoParams(IIII)V = SetVideoParams(int, int, int, int)
  setVideoParams_sec(IIII)V = SetVideoParams_sec(int, int, int, int)
  start()I = Start()
  stop()V = Stop()
veg/mediacapture/sdk/MLog = Veg.Mediacapture.Sdk.MLog
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  app = App
  isSignedWithDebugKey = IsSignedWithDebugKey
  d(Ljava/lang/String;)V = D(string)
  e(Ljava/lang/String;)V = E(string)
  i(Ljava/lang/String;)V = I(string)
  signedWithDebug()Z = SignedWithDebug()
  v(Ljava/lang/String;)V = V(string)
  w(Ljava/lang/String;)V = W(string)
veg/mediacapture/sdk/recordmc/AudioEncoderCore = Veg.Mediacapture.Sdk.Recordmc.AudioEncoderCore
  <init>(Landroid/content/Context;Lveg/mediacapture/sdk/MediaCaptureConfig;Lveg/mediacapture/sdk/InternalDataCallback;Lveg/mediacapture/sdk/MediaCaptureCallback;)V = .ctor(Android.Content.Context, Veg.Mediacapture.Sdk.MediaCaptureConfig, Veg.Mediacapture.Sdk.IInternalDataCallback, Veg.Mediacapture.Sdk.IMediaCaptureCallback)
  <init>(Landroid/content/Context;Lveg/mediacapture/sdk/MediaCaptureConfig;Lveg/mediacapture/sdk/InternalDataCallback;Lveg/mediacapture/sdk/MediaCaptureCallback;Landroid/media/projection/MediaProjection;)V = .ctor(Android.Content.Context, Veg.Mediacapture.Sdk.MediaCaptureConfig, Veg.Mediacapture.Sdk.IInternalDataCallback, Veg.Mediacapture.Sdk.IMediaCaptureCallback, Android.Media.Projection.MediaProjection)
  AUDIO_SAMPLING_RATES = AudioSamplingRates
  LOG_LEVEL = LogLevel
  TAG = Tag
  IsStarted()Z = IsStarted
  getMuxerCount()I = MuxerCount
  addMuxer(Lveg/mediacapture/sdk/recordmc/VideoEncoderCore;)V = AddMuxer(Veg.Mediacapture.Sdk.Recordmc.VideoEncoderCore)
  clearMuxers()V = ClearMuxers()
  release()I = Release()
  start()I = Start()
  stop()I = Stop()
veg/mediacapture/sdk/recordmc/CameraSurfaceRenderer = Veg.Mediacapture.Sdk.Recordmc.CameraSurfaceRenderer
  <init>(Landroid/content/Context;Lveg/mediacapture/sdk/MediaCaptureConfig;Lveg/mediacapture/sdk/InternalDataCallback;Lveg/mediacapture/sdk/MediaCaptureCallback;)V = .ctor(Android.Content.Context, Veg.Mediacapture.Sdk.MediaCaptureConfig, Veg.Mediacapture.Sdk.IInternalDataCallback, Veg.Mediacapture.Sdk.IMediaCaptureCallback)
  LOG_LEVEL = LogLevel
  sCSRenderer = SCSRenderer
  getSurface()Landroid/view/Surface; = Surface
  ApplyBitrate(IZ)V = ApplyBitrate(int, bool)
  ApplyFramerate(IZ)V = ApplyFramerate(int, bool)
  changeFilterMode(I)V = ChangeFilterMode(int)
  notifyPausing()V = NotifyPausing()
  onDrawFrame(Ljavax/microedition/khronos/opengles/GL10;)V = OnDrawFrame(Javax.Microedition.Khronos.Opengles.IGL10)
  onSurfaceChanged(Ljavax/microedition/khronos/opengles/GL10;II)V = OnSurfaceChanged(Javax.Microedition.Khronos.Opengles.IGL10, int, int)
  onSurfaceCreated(Ljavax/microedition/khronos/opengles/GL10;Ljavax/microedition/khronos/egl/EGLConfig;)V = OnSurfaceCreated(Javax.Microedition.Khronos.Opengles.IGL10, Javax.Microedition.Khronos.Egl.EGLConfig)
  onVideoEncoderQuit()V = OnVideoEncoderQuit()
  onVideoEncoderStarted(Lveg/mediacapture/sdk/recordmc/VideoEncoderCore;)V = OnVideoEncoderStarted(Veg.Mediacapture.Sdk.Recordmc.VideoEncoderCore)
  onVideoEncoderStartFailed()V = OnVideoEncoderStartFailed()
  onVideoEncoderStopped(Lveg/mediacapture/sdk/recordmc/VideoEncoderCore;)V = OnVideoEncoderStopped(Veg.Mediacapture.Sdk.Recordmc.VideoEncoderCore)
  setCameraPreviewSize(II)V = SetCameraPreviewSize(int, int)
  setCameraPreviewViewport(IIII)V = SetCameraPreviewViewport(int, int, int, int)
  startRecord()V = StartRecord()
  stopRecord()V = StopRecord()
  updateFilter()V = UpdateFilter()
veg/mediacapture/sdk/recordmc/G711 = Veg.Mediacapture.Sdk.Recordmc.G711
  <init>()V = .ctor()
  alaw2linear(B)I = Alaw2linear(sbyte)
  alaw2ulaw(B)B = Alaw2ulaw(sbyte)
  linear2alaw(I)B = Linear2alaw(int)
  linear2ulaw(I)B = Linear2ulaw(int)
  ulaw2alaw(B)B = Ulaw2alaw(sbyte)
  ulaw2linear(B)I = Ulaw2linear(sbyte)
veg/mediacapture/sdk/recordmc/OffscreenSurfaceRenderer = Veg.Mediacapture.Sdk.Recordmc.OffscreenSurfaceRenderer
  <init>(Landroid/content/Context;Lveg/mediacapture/sdk/MediaCaptureConfig;Lveg/mediacapture/sdk/InternalDataCallback;Lveg/mediacapture/sdk/MediaCaptureCallback;Landroid/media/projection/MediaProjection;)V = .ctor(Android.Content.Context, Veg.Mediacapture.Sdk.MediaCaptureConfig, Veg.Mediacapture.Sdk.IInternalDataCallback, Veg.Mediacapture.Sdk.IMediaCaptureCallback, Android.Media.Projection.MediaProjection)
  LOG_LEVEL = LogLevel
  getSurface()Landroid/view/Surface; = Surface
  getSurfaceTexture()Landroid/graphics/SurfaceTexture; = SurfaceTexture
  ApplyBitrate(IZ)V = ApplyBitrate(int, bool)
  ApplyFramerate(IZ)V = ApplyFramerate(int, bool)
  Close()V = Close()
  FrameAvailable()V = FrameAvailable()
  notifyPausing()V = NotifyPausing()
  onVideoEncoderQuit()V = OnVideoEncoderQuit()
  onVideoEncoderStarted(Lveg/mediacapture/sdk/recordmc/VideoEncoderCore;)V = OnVideoEncoderStarted(Veg.Mediacapture.Sdk.Recordmc.VideoEncoderCore)
  onVideoEncoderStartFailed()V = OnVideoEncoderStartFailed()
  onVideoEncoderStopped(Lveg/mediacapture/sdk/recordmc/VideoEncoderCore;)V = OnVideoEncoderStopped(Veg.Mediacapture.Sdk.Recordmc.VideoEncoderCore)
  startRecord()V = StartRecord()
  stopRecord()V = StopRecord()
veg/mediacapture/sdk/recordmc/TextureMovieEncoder = Veg.Mediacapture.Sdk.Recordmc.TextureMovieEncoder
  <init>()V = .ctor()
  LOG_LEVEL = LogLevel
  mReadyFence = MReadyFence
  isRecording()Z = IsRecording
  frameAvailable(Landroid/graphics/SurfaceTexture;)V = FrameAvailable(Android.Graphics.SurfaceTexture)
  run()V = Run()
  setBitrate(I)V = SetBitrate(int)
  setFramerate(I)V = SetFramerate(int)
  setTextureId(I)V = SetTextureId(int)
  startRecording(Lveg/mediacapture/sdk/recordmc/TextureMovieEncoder$EncoderConfig;)V = StartRecording(Veg.Mediacapture.Sdk.Recordmc.TextureMovieEncoder.EncoderConfig)
  stopRecording()V = StopRecording()
  updateSharedContext(Landroid/opengl/EGLContext;)V = UpdateSharedContext(Android.Opengl.EGLContext)
veg/mediacapture/sdk/recordmc/VideoEncoderCore = Veg.Mediacapture.Sdk.Recordmc.VideoEncoderCore
  <init>(Landroid/content/Context;Lveg/mediacapture/sdk/MediaCaptureConfig;Lveg/mediacapture/sdk/InternalDataCallback;IIIIILjava/io/File;Z)V = .ctor(Android.Content.Context, Veg.Mediacapture.Sdk.MediaCaptureConfig, Veg.Mediacapture.Sdk.IInternalDataCallback, int, int, int, int, int, Java.IO.File, bool)
  LOG_LEVEL = LogLevel
  MUXER_ENABLED = MuxerEnabled
  getInputSurface()Landroid/view/Surface; = InputSurface
  isMuxStarted()Z = IsMuxStarted
  drainEncoder(Z)V = DrainEncoder(bool)
  putAudioFormat(Landroid/media/MediaFormat;)I = PutAudioFormat(Android.Media.MediaFormat)
  putAudioFrame(Ljava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)I = PutAudioFrame(Java.Nio.ByteBuffer, Android.Media.MediaCodec.BufferInfo)
  putVideoFormat(Landroid/media/MediaFormat;)I = PutVideoFormat(Android.Media.MediaFormat)
  putVideoFrame(Ljava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)I = PutVideoFrame(Java.Nio.ByteBuffer, Android.Media.MediaCodec.BufferInfo)
  release()V = Release()
  setBitrate(I)V = SetBitrate(int)
  setScalingMode(I)V = SetScalingMode(int)
veg/mediacapture/sdk/render/Drawable2d = Veg.Mediacapture.Sdk.Render.Drawable2d
  <init>(Lveg/mediacapture/sdk/render/Drawable2d$Prefab;[F)V = .ctor(Veg.Mediacapture.Sdk.Render.Drawable2d.Prefab, float[])
  getCoordsPerVertex()I = CoordsPerVertex
  getTexCoordArray()Ljava/nio/FloatBuffer; = TexCoordArray
  getTexCoordStride()I = TexCoordStride
  getVertexArray()Ljava/nio/FloatBuffer; = VertexArray
  getVertexCount()I = VertexCount
  getVertexStride()I = VertexStride
  updateVertexArray([F)V = UpdateVertexArray(float[])
veg/mediacapture/sdk/render/EglCore = Veg.Mediacapture.Sdk.Render.EglCore
  <init>()V = .ctor()
  <init>(Landroid/opengl/EGLContext;I)V = .ctor(Android.Opengl.EGLContext, int)
  FLAG_RECORDABLE = FlagRecordable
  FLAG_TRY_GLES3 = FlagTryGles3
  getGlVersion()I = GlVersion
  createOffscreenSurface(II)Landroid/opengl/EGLSurface; = CreateOffscreenSurface(int, int)
  createWindowSurface(Ljava/lang/Object;)Landroid/opengl/EGLSurface; = CreateWindowSurface(Java.Lang.Object)
  isCurrent(Landroid/opengl/EGLSurface;)Z = IsCurrent(Android.Opengl.EGLSurface)
  logCurrent(Ljava/lang/String;)V = LogCurrent(string)
  makeCurrent(Landroid/opengl/EGLSurface;)V = MakeCurrent(Android.Opengl.EGLSurface)
  makeCurrent(Landroid/opengl/EGLSurface;Landroid/opengl/EGLSurface;)V = MakeCurrent(Android.Opengl.EGLSurface, Android.Opengl.EGLSurface)
  makeNothingCurrent()V = MakeNothingCurrent()
  queryString(I)Ljava/lang/String; = QueryString(int)
  querySurface(Landroid/opengl/EGLSurface;I)I = QuerySurface(Android.Opengl.EGLSurface, int)
  release()V = Release()
  releaseSurface(Landroid/opengl/EGLSurface;)V = ReleaseSurface(Android.Opengl.EGLSurface)
  setPresentationTime(Landroid/opengl/EGLSurface;J)V = SetPresentationTime(Android.Opengl.EGLSurface, long)
  swapBuffers(Landroid/opengl/EGLSurface;)Z = SwapBuffers(Android.Opengl.EGLSurface)
veg/mediacapture/sdk/render/EglSurfaceBase = Veg.Mediacapture.Sdk.Render.EglSurfaceBase
  <init>(Lveg/mediacapture/sdk/render/EglCore;)V = .ctor(Veg.Mediacapture.Sdk.Render.EglCore)
  mEglCore = MEglCore
  TAG = Tag
  getHeight()I = Height
  getReadPixels()Ljava/nio/ByteBuffer; = ReadPixels
  getWidth()I = Width
  createOffscreenSurface(II)V = CreateOffscreenSurface(int, int)
  createWindowSurface(Ljava/lang/Object;)V = CreateWindowSurface(Java.Lang.Object)
  makeCurrent()V = MakeCurrent()
  makeCurrentReadFrom(Lveg/mediacapture/sdk/render/EglSurfaceBase;)V = MakeCurrentReadFrom(Veg.Mediacapture.Sdk.Render.EglSurfaceBase)
  releaseEglSurface()V = ReleaseEglSurface()
  saveFrame(Ljava/io/File;)V = SaveFrame(Java.IO.File)
  setPresentationTime(J)V = SetPresentationTime(long)
  swapBuffers()Z = SwapBuffers()
veg/mediacapture/sdk/render/FrameRect = Veg.Mediacapture.Sdk.Render.FrameRect
  <init>(Lveg/mediacapture/sdk/render/Texture2dProgram;[F)V = .ctor(Veg.Mediacapture.Sdk.Render.Texture2dProgram, float[])
  getProgram()Lveg/mediacapture/sdk/render/Texture2dProgram; = Program
  changeProgram(Lveg/mediacapture/sdk/render/Texture2dProgram;)V = ChangeProgram(Veg.Mediacapture.Sdk.Render.Texture2dProgram)
  createTextureObject()I = CreateTextureObject()
  drawFrame(I[F)V = DrawFrame(int, float[])
  drawFrame(I[F[F)V = DrawFrame(int, float[], float[])
  getRectCoords()[F = GetRectCoords()
  loadBitmap(ILandroid/graphics/Bitmap;I)V = LoadBitmap(int, Android.Graphics.Bitmap, int)
  release(Z)V = Release(bool)
  updateRectCoords([F)V = UpdateRectCoords(float[])
veg/mediacapture/sdk/render/FullFrameRect = Veg.Mediacapture.Sdk.Render.FullFrameRect
  <init>(Lveg/mediacapture/sdk/render/Texture2dProgram;)V = .ctor(Veg.Mediacapture.Sdk.Render.Texture2dProgram)
  getProgram()Lveg/mediacapture/sdk/render/Texture2dProgram; = Program
  changeProgram(Lveg/mediacapture/sdk/render/Texture2dProgram;)V = ChangeProgram(Veg.Mediacapture.Sdk.Render.Texture2dProgram)
  createTextureObject()I = CreateTextureObject()
  drawFrame(I[F)V = DrawFrame(int, float[])
  drawFrame(I[F[F)V = DrawFrame(int, float[], float[])
  loadBitmap(ILandroid/graphics/Bitmap;I)V = LoadBitmap(int, Android.Graphics.Bitmap, int)
  release(Z)V = Release(bool)
veg/mediacapture/sdk/render/GlUtil = Veg.Mediacapture.Sdk.Render.GlUtil
  IDENTITY_MATRIX = IdentityMatrix
  TAG = Tag
  checkGlError(Ljava/lang/String;)V = CheckGlError(string)
  checkLocation(ILjava/lang/String;)V = CheckLocation(int, string)
  createFloatBuffer([F)Ljava/nio/FloatBuffer; = CreateFloatBuffer(float[])
  createImageTexture(Ljava/nio/ByteBuffer;III)I = CreateImageTexture(Java.Nio.ByteBuffer, int, int, int)
  createProgram(Ljava/lang/String;Ljava/lang/String;)I = CreateProgram(string, string)
  loadShader(ILjava/lang/String;)I = LoadShader(int, string)
  logVersionInfo()V = LogVersionInfo()
veg/mediacapture/sdk/render/Texture2dProgram = Veg.Mediacapture.Sdk.Render.Texture2dProgram
  <init>(Lveg/mediacapture/sdk/render/Texture2dProgram$ProgramType;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Veg.Mediacapture.Sdk.Render.Texture2dProgram.ProgramType, string, string)
  KERNEL_SIZE = KernelSize
  createTextureObject()I = CreateTextureObject()
  draw([FLjava/nio/FloatBuffer;IIII[FLjava/nio/FloatBuffer;II)V = Draw(float[], Java.Nio.FloatBuffer, int, int, int, int, float[], Java.Nio.FloatBuffer, int, int)
  getProgramType()Lveg/mediacapture/sdk/render/Texture2dProgram$ProgramType; = GetProgramType()
  loadBitmap(ILandroid/graphics/Bitmap;I)V = LoadBitmap(int, Android.Graphics.Bitmap, int)
  release()V = Release()
  setKernel([FF)V = SetKernel(float[], float)
  setTexSize(II)V = SetTexSize(int, int)
  setViewport(IIII)V = SetViewport(int, int, int, int)
veg/mediacapture/sdk/render/WindowSurface = Veg.Mediacapture.Sdk.Render.WindowSurface
  <init>(Lveg/mediacapture/sdk/render/EglCore;II)V = .ctor(Veg.Mediacapture.Sdk.Render.EglCore, int, int)
  <init>(Lveg/mediacapture/sdk/render/EglCore;Landroid/graphics/SurfaceTexture;)V = .ctor(Veg.Mediacapture.Sdk.Render.EglCore, Android.Graphics.SurfaceTexture)
  <init>(Lveg/mediacapture/sdk/render/EglCore;Landroid/view/Surface;Z)V = .ctor(Veg.Mediacapture.Sdk.Render.EglCore, Android.Views.Surface, bool)
  recreate(Lveg/mediacapture/sdk/render/EglCore;)V = Recreate(Veg.Mediacapture.Sdk.Render.EglCore)
  release()V = Release()
veg/mediacapture/sdk/streaming/audio/AACStream = Veg.Mediacapture.Sdk.Streaming.Audio.AACStream
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  LOG_LEVEL = LogLevel
  sADTSSamplingRates = SADTSSamplingRates
  sAudioObjectTypes = SAudioObjectTypes
  TAG = Tag
  isCheckedStream()Z = IsCheckedStream
  generateSessionDescription()Ljava/lang/String; = GenerateSessionDescription()
veg/mediacapture/sdk/streaming/audio/AMRNBStream = Veg.Mediacapture.Sdk.Streaming.Audio.AMRNBStream
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  isCheckedStream()Z = IsCheckedStream
  generateSessionDescription()Ljava/lang/String; = GenerateSessionDescription()
veg/mediacapture/sdk/streaming/audio/AudioStream = Veg.Mediacapture.Sdk.Streaming.Audio.AudioStream
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  mAudioBitrate = MAudioBitrate
  mAudioEncoder = MAudioEncoder
  mAudioSource = MAudioSource
  mConfig = MConfig
  mOutputFormat = MOutputFormat
  mSamplingRate = MSamplingRate
  getAudioBitrate()I = AudioBitrate
  setAudioBitrate(I)V = AudioBitrate
  getAudioSamplingRate()I = AudioSamplingRate
  setAudioSamplingRate(I)V = AudioSamplingRate
  setAudioEncoder(I)V = SetAudioEncoder(int)
  setAudioSource(I)V = SetAudioSource(int)
  setOutputFormat(I)V = SetOutputFormat(int)
veg/mediacapture/sdk/streaming/exceptions/AACNotSupportedException = Veg.Mediacapture.Sdk.Streaming.Exceptions.AACNotSupportedException
  <init>()V = .ctor()
veg/mediacapture/sdk/streaming/MediaStream = Veg.Mediacapture.Sdk.Streaming.MediaStream
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  mConfig = MConfig
  mContext = MContext
  media_callback = MediaCallback
  mMediaRecorder = MMediaRecorder
  mModeDefaultWasUsed = MModeDefaultWasUsed
  mode = Mode
  MODE_DEFAULT = ModeDefault
  MODE_STREAMING = ModeStreaming
  mp4muxHRV = Mp4muxHRV
  mp4muxLRV = Mp4muxLRV
  mPacketizer = MPacketizer
  mStreaming = MStreaming
  TAG = Tag
  isStreaming()Z = IsStreaming
  getPacketizer()Lveg/mediacapture/sdk/streaming/rtp/AbstractPacketizer; = Packetizer
  getSSRC()I = SSRC
  generateSessionDescription()Ljava/lang/String; = GenerateSessionDescription()
  getDestinationPorts()[I = GetDestinationPorts()
  getLocalPorts()[I = GetLocalPorts()
  is_data_ready()Z = Is_data_ready()
  pause()V = Pause()
  prepare(Ljava/lang/String;)V = Prepare(string)
  release()V = Release()
  setConfig(Lveg/mediacapture/sdk/MediaCaptureConfig;)V = SetConfig(Veg.Mediacapture.Sdk.MediaCaptureConfig)
  setDestinationAddress(Ljava/net/InetAddress;)V = SetDestinationAddress(Java.Net.InetAddress)
  setDestinationPorts(I)V = SetDestinationPorts(int)
  setDestinationPorts(II)V = SetDestinationPorts(int, int)
  setInternalDataCallback(Lveg/mediacapture/sdk/InternalDataCallback;)V = SetInternalDataCallback(Veg.Mediacapture.Sdk.IInternalDataCallback)
  setMode(I)V = SetMode(int)
  SetMP4MuxHRV(Lveg/mediacapture/sdk/streaming/mp4/MP4Muxj;)V = SetMP4MuxHRV(Veg.Mediacapture.Sdk.Streaming.Mp4.MP4Muxj)
  SetMP4MuxLRV(Lveg/mediacapture/sdk/streaming/mp4/MP4Muxj;)V = SetMP4MuxLRV(Veg.Mediacapture.Sdk.Streaming.Mp4.MP4Muxj)
  setTimeToLive(I)V = SetTimeToLive(int)
  start(J)V = Start(long)
  stop()V = Stop()
veg/mediacapture/sdk/streaming/mp4/AudioPacket = Veg.Mediacapture.Sdk.Streaming.Mp4.AudioPacket
  <init>()V = .ctor()
  bb = Bb
  duration = Duration
  pts = Pts
veg/mediacapture/sdk/streaming/mp4/MP4Config = Veg.Mediacapture.Sdk.Streaming.Mp4.MP4Config
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getB64PPS()Ljava/lang/String; = B64PPS
  getB64SPS()Ljava/lang/String; = B64SPS
  getProfileLevel()Ljava/lang/String; = ProfileLevel
veg/mediacapture/sdk/streaming/mp4/MP4Muxj = Veg.Mediacapture.Sdk.Streaming.Mp4.MP4Muxj
  <init>(ILandroid/content/Context;)V = .ctor(int, Android.Content.Context)
  LOG_LEVEL = LogLevel
  MP4MUX_TYPE_HRV = Mp4muxTypeHrv
  MP4MUX_TYPE_LRV = Mp4muxTypeLrv
  getFramesCount_in()I = FramesCount_in
  IsHRV()Z = IsHRV
  IsLRV()Z = IsLRV
  IsStarted()Z = IsStarted
  pause()V = Pause()
  putAudio(Ljava/nio/ByteBuffer;JJ)V = PutAudio(Java.Nio.ByteBuffer, long, long)
  putFrame(Lveg/mediacapture/sdk/streaming/mp4/VideoFrame;)V = PutFrame(Veg.Mediacapture.Sdk.Streaming.Mp4.VideoFrame)
  putPPS(Ljava/nio/ByteBuffer;)V = PutPPS(Java.Nio.ByteBuffer)
  putSPS(Ljava/nio/ByteBuffer;)V = PutSPS(Java.Nio.ByteBuffer)
  setAudioConfig(I)V = SetAudioConfig(int)
  SetFile(Ljava/lang/String;)V = SetFile(string)
  SetMaxDuration(I)V = SetMaxDuration(int)
  setSamplingRate(I)V = SetSamplingRate(int)
  start(J)V = Start(long)
  stat_print()V = Stat_print()
  stop()V = Stop()
veg/mediacapture/sdk/streaming/mp4/VideoFrame = Veg.Mediacapture.Sdk.Streaming.Mp4.VideoFrame
  <init>()V = .ctor()
  <init>(Lveg/mediacapture/sdk/streaming/mp4/VideoFrame;)V = .ctor(Veg.Mediacapture.Sdk.Streaming.Mp4.VideoFrame)
  flags = Flags
  framebuf = Framebuf
  frame_num = FrameNum
  frame_size = FrameSize
  is_key = IsKey
  pts = Pts
  VIDEO_FRAME_FLAG_END_OF_STREAM = VideoFrameFlagEndOfStream
  VIDEO_FRAME_FLAG_PROCESSED = VideoFrameFlagProcessed
  VIDEO_FRAME_SPSPPS = VideoFrameSpspps
  width = Width
veg/mediacapture/sdk/streaming/rtcp/SenderReport = Veg.Mediacapture.Sdk.Streaming.Rtcp.SenderReport
  <init>()V = .ctor()
  MTU = Mtu
  getLocalPort()I = LocalPort
  getPort()I = Port
  getSSRC()I = SSRC
  setSSRC(I)V = SSRC
  close()V = Close()
  send()V = Send()
  setDestination(Ljava/net/InetAddress;I)V = SetDestination(Java.Net.InetAddress, int)
  setNtpTimestamp(J)V = SetNtpTimestamp(long)
  setRtpTimestamp(J)V = SetRtpTimestamp(long)
  update(I)V = Update(int)
veg/mediacapture/sdk/streaming/rtp/AACADTSPacketizer = Veg.Mediacapture.Sdk.Streaming.Rtp.AACADTSPacketizer
  <init>()V = .ctor()
  LOG_LEVEL = LogLevel
  MEDIA_TYPE_AUDIO_AAC = MediaTypeAudioAac
  is_data_ready()Z = Is_data_ready()
  pause()V = Pause()
  run()V = Run()
  setSamplingRate(I)V = SetSamplingRate(int)
  start(J)V = Start(long)
  stop()V = Stop()
veg/mediacapture/sdk/streaming/rtp/AbstractPacketizer = Veg.Mediacapture.Sdk.Streaming.Rtp.AbstractPacketizer
  <init>()V = .ctor()
  buffer = Buffer
  is = Is
  mbitrate = Mbitrate
  mconfig = Mconfig
  mConfigMain = MConfigMain
  media_callback = MediaCallback
  mp4muxHRV = Mp4muxHRV
  mp4muxLRV = Mp4muxLRV
  m_start_time = MStartTime
  m_state = MState
  report = Report
  rtphl = Rtphl
  socket = Socket
  ts = Ts
  getRtcpSocket()Lveg/mediacapture/sdk/streaming/rtcp/SenderReport; = RtcpSocket
  getRtpSocket()Lveg/mediacapture/sdk/streaming/rtp/RtpSocket; = RtpSocket
  getSSRC()I = SSRC
  setSSRC(I)V = SSRC
  getStartTime()J = StartTime
  setStartTime(J)V = StartTime
  is_data_ready()Z = Is_data_ready()
  pause()V = Pause()
  printBuffer([BII)Ljava/lang/String; = PrintBuffer(byte[], int, int)
  send(I)V = Send(int)
  setConfig(Lveg/mediacapture/sdk/streaming/mp4/MP4Config;)V = SetConfig(Veg.Mediacapture.Sdk.Streaming.Mp4.MP4Config)
  setConfigMain(Lveg/mediacapture/sdk/MediaCaptureConfig;)V = SetConfigMain(Veg.Mediacapture.Sdk.MediaCaptureConfig)
  setDestination(Ljava/net/InetAddress;II)V = SetDestination(Java.Net.InetAddress, int, int)
  setInputStream(Ljava/io/InputStream;)V = SetInputStream(System.IO.Stream)
  setInternalDataCallback(Lveg/mediacapture/sdk/InternalDataCallback;)V = SetInternalDataCallback(Veg.Mediacapture.Sdk.IInternalDataCallback)
  SetMP4MuxHRV(Lveg/mediacapture/sdk/streaming/mp4/MP4Muxj;)V = SetMP4MuxHRV(Veg.Mediacapture.Sdk.Streaming.Mp4.MP4Muxj)
  SetMP4MuxLRV(Lveg/mediacapture/sdk/streaming/mp4/MP4Muxj;)V = SetMP4MuxLRV(Veg.Mediacapture.Sdk.Streaming.Mp4.MP4Muxj)
  setTimeToLive(I)V = SetTimeToLive(int)
  setVideoEncodingBitrate(I)V = SetVideoEncodingBitrate(int)
  start(J)V = Start(long)
  stop()V = Stop()
veg/mediacapture/sdk/streaming/rtp/AMRNBPacketizer = Veg.Mediacapture.Sdk.Streaming.Rtp.AMRNBPacketizer
  <init>()V = .ctor()
  LOG_LEVEL = LogLevel
  TAG = Tag
  is_data_ready()Z = Is_data_ready()
  pause()V = Pause()
  run()V = Run()
  start(J)V = Start(long)
  stop()V = Stop()
veg/mediacapture/sdk/streaming/rtp/H263Packetizer = Veg.Mediacapture.Sdk.Streaming.Rtp.H263Packetizer
  <init>()V = .ctor()
  LOG_LEVEL = LogLevel
  TAG = Tag
  is_data_ready()Z = Is_data_ready()
  pause()V = Pause()
  run()V = Run()
  start(J)V = Start(long)
  stop()V = Stop()
veg/mediacapture/sdk/streaming/rtp/H264Packetizer = Veg.Mediacapture.Sdk.Streaming.Rtp.H264Packetizer
  <init>()V = .ctor()
  LOG_LEVEL = LogLevel
  MEDIA_TYPE_IMAGE = MediaTypeImage
  MEDIA_TYPE_VIDEO_264 = MediaTypeVideo264
  MEDIA_TYPE_VIDEO_MP4 = MediaTypeVideoMp4
  TAG = Tag
  is_data_ready()Z = Is_data_ready()
  pause()V = Pause()
  run()V = Run()
  start(J)V = Start(long)
  stop()V = Stop()
veg/mediacapture/sdk/streaming/rtp/MPEG2TSWriter = Veg.Mediacapture.Sdk.Streaming.Rtp.MPEG2TSWriter
  <init>()V = .ctor()
  LOG_LEVEL = LogLevel
  mContinuityCounter = MContinuityCounter
  mCrcTable = MCrcTable
  mH264AccessUnitDelimiter = MH264AccessUnitDelimiter
  mMpegtsBAOS = MMpegtsBAOS
  mNumTSPacketsBeforeMeta = MNumTSPacketsBeforeMeta
  mNumTSPacketsWritten = MNumTSPacketsWritten
  mPATContinuityCounter = MPATContinuityCounter
  mPMTContinuityCounter = MPMTContinuityCounter
  mTimeStamp = MTimeStamp
  mTimeStampIncr = MTimeStampIncr
  PTSaheadOfPCRus = PTSaheadOfPCRus
  TAG = Tag
  crc32([BII)[B = Crc32(byte[], int, int)
  initCrcTable()V = InitCrcTable()
  input([BIIJ)V = Input(byte[], int, int, long)
  output([B)V = Output(byte[])
  start()V = Start()
  stop()V = Stop()
  writeAccessUnit([BJ)V = WriteAccessUnit(byte[], long)
  writePAT()V = WritePAT()
  writePMT()V = WritePMT()
  writeTS()V = WriteTS()
veg/mediacapture/sdk/streaming/rtp/RtpSocket = Veg.Mediacapture.Sdk.Streaming.Rtp.RtpSocket
  <init>()V = .ctor()
  MTU = Mtu
  RTP_HEADER_LENGTH = RtpHeaderLength
  getLocalPort()I = LocalPort
  getPort()I = Port
  getSSRC()I = SSRC
  setSSRC(I)V = SSRC
  close()V = Close()
  getBuffer()[B = GetBuffer()
  markNextPacket()V = MarkNextPacket()
  send(I)V = Send(int)
  setDestination(Ljava/net/InetAddress;I)V = SetDestination(Java.Net.InetAddress, int)
  setTimeToLive(I)V = SetTimeToLive(int)
  updateTimestamp(J)V = UpdateTimestamp(long)
veg/mediacapture/sdk/streaming/Session = Veg.Mediacapture.Sdk.Streaming.Session
  <init>()V = .ctor()
  <init>(Ljava/net/InetAddress;Ljava/net/InetAddress;)V = .ctor(Java.Net.InetAddress, Java.Net.InetAddress)
  gnClipin = GnClipin
  gnHRV_end_pts = GnHRVEndPts
  gsSessionName = GsSessionName
  LOG_LEVEL = LogLevel
  TAG = Tag
  getAudioTrack()Lveg/mediacapture/sdk/streaming/audio/AudioStream; = AudioTrack
  GetClipin()I = Clipin
  SetClipin(I)V = Clipin
  getDestination()Ljava/net/InetAddress; = Destination
  setDestination(Ljava/net/InetAddress;)V = Destination
  GetHRV_end_pts()J = HRV_end_pts
  SetHRV_end_pts(J)V = HRV_end_pts
  isStreaming()Z = IsStreaming
  getProjection()Landroid/media/projection/MediaProjection; = Projection
  setProjection(Landroid/media/projection/MediaProjection;)V = Projection
  getSessionDescription()Ljava/lang/String; = SessionDescription
  GetSessionName()Ljava/lang/String; = SessionName
  SetSessionName(Ljava/lang/String;)V = SessionName
  getVideoTrack()Lveg/mediacapture/sdk/streaming/video/VideoStream; = VideoTrack
  addAudioTrack(Lveg/mediacapture/sdk/streaming/audio/AudioStream;)V = AddAudioTrack(Veg.Mediacapture.Sdk.Streaming.Audio.AudioStream)
  addVideoTrack(Lveg/mediacapture/sdk/streaming/video/VideoStream;)V = AddVideoTrack(Veg.Mediacapture.Sdk.Streaming.Video.VideoStream)
  flush()V = Flush()
  get_start_time()J = Get_start_time()
  GetMP4Mux(I)Lveg/mediacapture/sdk/streaming/mp4/MP4Muxj; = GetMP4Mux(int)
  getTrack(I)Lveg/mediacapture/sdk/streaming/Stream; = GetTrack(int)
  pause(I)V = Pause(int)
  prepare(I)V = Prepare(int)
  removeAudioTrack()V = RemoveAudioTrack()
  removeVideoTrack()V = RemoveVideoTrack()
  setContext(Landroid/content/Context;)V = SetContext(Android.Content.Context)
  setInternalDataCallback(Lveg/mediacapture/sdk/InternalDataCallback;)V = SetInternalDataCallback(Veg.Mediacapture.Sdk.IInternalDataCallback)
  SetMP4Mux(ILjava/lang/String;Landroid/content/Context;)V = SetMP4Mux(int, string, Android.Content.Context)
  setOrigin(Ljava/net/InetAddress;)V = SetOrigin(Java.Net.InetAddress)
  setTimeToLive(I)V = SetTimeToLive(int)
  start()V = Start()
  start(I)V = Start(int)
  stop()V = Stop()
  stop(I)V = Stop(int)
  trackExists(I)Z = TrackExists(int)
veg/mediacapture/sdk/streaming/SessionBuilder = Veg.Mediacapture.Sdk.Streaming.SessionBuilder
  AUDIO_AAC = AudioAac
  AUDIO_AMRNB = AudioAmrnb
  AUDIO_NONE = AudioNone
  LOG_LEVEL = LogLevel
  TAG = Tag
  VIDEO_H263 = VideoH263
  VIDEO_H264 = VideoH264
  VIDEO_NONE = VideoNone
  getAudioEncoder()I = AudioEncoder
  getCamera()I = Camera
  getConfig()Lveg/mediacapture/sdk/MediaCaptureConfig; = Config
  getContext()Landroid/content/Context; = Context
  getDestination()Ljava/net/InetAddress; = Destination
  getFlashState()Z = FlashState
  getInstance()Lveg/mediacapture/sdk/streaming/SessionBuilder; = Instance
  getOrigin()Ljava/net/InetAddress; = Origin
  getSurfaceHolder()Landroid/view/SurfaceHolder; = SurfaceHolder
  getTimeToLive()I = TimeToLive
  getVideoEncoder()I = VideoEncoder
  getVideoQuality()Lveg/mediacapture/sdk/streaming/video/VideoQuality; = VideoQuality
  build()Lveg/mediacapture/sdk/streaming/Session; = Build()
  clone()Lveg/mediacapture/sdk/streaming/SessionBuilder; = Clone()
  setAudioEncoder(I)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetAudioEncoder(int)
  setCamera(I)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetCamera(int)
  setConfig(Lveg/mediacapture/sdk/MediaCaptureConfig;)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetConfig(Veg.Mediacapture.Sdk.MediaCaptureConfig)
  setContext(Landroid/content/Context;)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetContext(Android.Content.Context)
  setDestination(Ljava/net/InetAddress;)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetDestination(Java.Net.InetAddress)
  setFlashEnabled(Z)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetFlashEnabled(bool)
  setInternalDataCallback(Lveg/mediacapture/sdk/InternalDataCallback;)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetInternalDataCallback(Veg.Mediacapture.Sdk.IInternalDataCallback)
  setOrigin(Ljava/net/InetAddress;)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetOrigin(Java.Net.InetAddress)
  setPermissionRequestResult(ILandroid/content/Intent;)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetPermissionRequestResult(int, Android.Content.Intent)
  setProjectionManager(Landroid/media/projection/MediaProjectionManager;)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetProjectionManager(Android.Media.Projection.MediaProjectionManager)
  setSurfaceHolder(Landroid/view/SurfaceHolder;)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetSurfaceHolder(Android.Views.ISurfaceHolder)
  setTimeToLive(I)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetTimeToLive(int)
  setVideoEncoder(I)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetVideoEncoder(int)
  setVideoQuality(Lveg/mediacapture/sdk/streaming/video/VideoQuality;)Lveg/mediacapture/sdk/streaming/SessionBuilder; = SetVideoQuality(Veg.Mediacapture.Sdk.Streaming.Video.VideoQuality)
veg/mediacapture/sdk/streaming/Stream = Veg.Mediacapture.Sdk.Streaming.IStream
  isCheckedStream()Z = IsCheckedStream
  isStreaming()Z = IsStreaming
  getSSRC()I = SSRC
  generateSessionDescription()Ljava/lang/String; = GenerateSessionDescription()
  getDestinationPorts()[I = GetDestinationPorts()
  getLocalPorts()[I = GetLocalPorts()
  is_data_ready()Z = Is_data_ready()
  pause()V = Pause()
  prepare(Ljava/lang/String;)V = Prepare(string)
  release()V = Release()
  setDestinationAddress(Ljava/net/InetAddress;)V = SetDestinationAddress(Java.Net.InetAddress)
  setDestinationPorts(I)V = SetDestinationPorts(int)
  setDestinationPorts(II)V = SetDestinationPorts(int, int)
  setTimeToLive(I)V = SetTimeToLive(int)
  start(J)V = Start(long)
  stop()V = Stop()
veg/mediacapture/sdk/streaming/video/H263Stream = Veg.Mediacapture.Sdk.Streaming.Video.H263Stream
  <init>(ILandroid/content/Context;)V = .ctor(int, Android.Content.Context)
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  isCheckedStream()Z = IsCheckedStream
  generateSessionDescription()Ljava/lang/String; = GenerateSessionDescription()
veg/mediacapture/sdk/streaming/video/H264Stream = Veg.Mediacapture.Sdk.Streaming.Video.H264Stream
  <init>(ILandroid/content/Context;)V = .ctor(int, Android.Content.Context)
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  LOG_LEVEL = LogLevel
  isCheckedStream()Z = IsCheckedStream
  generateSessionDescription()Ljava/lang/String; = GenerateSessionDescription()
  setPreferences(Landroid/content/SharedPreferences;)V = SetPreferences(Android.Content.ISharedPreferences)
veg/mediacapture/sdk/streaming/video/VideoQuality = Veg.Mediacapture.Sdk.Streaming.Video.VideoQuality
  <init>()V = .ctor()
  <init>(IIII)V = .ctor(int, int, int, int)
  <init>(IIIII)V = .ctor(int, int, int, int, int)
  bitrate = Bitrate
  defaultVideoQualiy = DefaultVideoQualiy
  framerate = Framerate
  orientation = Orientation
  resX = ResX
  resY = ResY
  clone()Lveg/mediacapture/sdk/streaming/video/VideoQuality; = Clone()
  equals(Lveg/mediacapture/sdk/streaming/video/VideoQuality;)Z = Equals(Veg.Mediacapture.Sdk.Streaming.Video.VideoQuality)
  merge(Lveg/mediacapture/sdk/streaming/video/VideoQuality;Lveg/mediacapture/sdk/streaming/video/VideoQuality;)Lveg/mediacapture/sdk/streaming/video/VideoQuality; = Merge(Veg.Mediacapture.Sdk.Streaming.Video.VideoQuality, Veg.Mediacapture.Sdk.Streaming.Video.VideoQuality)
  parseQuality(Ljava/lang/String;)Lveg/mediacapture/sdk/streaming/video/VideoQuality; = ParseQuality(string)
veg/mediacapture/sdk/streaming/video/VideoStream = Veg.Mediacapture.Sdk.Streaming.Video.VideoStream
  <init>(ILandroid/content/Context;)V = .ctor(int, Android.Content.Context)
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  isAutoFocusing = IsAutoFocusing
  isFocused = IsFocused
  isSamsungS4Zoom = IsSamsungS4Zoom
  isSmoothZoom = IsSmoothZoom
  isZoomStarted = IsZoomStarted
  LOG_LEVEL = LogLevel
  mCamera2 = MCamera2
  mCameraId = MCameraId
  m_cameraInfo = MCameraInfo
  mFlashState = MFlashState
  mQuality = MQuality
  mQualityHasChanged = MQualityHasChanged
  mSurfaceHolder = MSurfaceHolder
  mSurfaceHolderCallback = MSurfaceHolderCallback
  mSurfaceTexture = MSurfaceTexture
  mVideoEncoder = MVideoEncoder
  mZoomMax = MZoomMax
  mZoomVal = MZoomVal
  TAG = Tag
  getFlashState()Z = FlashState
  setFlashState(Z)V = FlashState
  getProjection()Landroid/media/projection/MediaProjection; = Projection
  getZoom()I = Zoom
  setZoom(I)V = Zoom
  getZoomVal()I = ZoomVal
  check_device()V = Check_device()
  generateSessionDescription()Ljava/lang/String; = GenerateSessionDescription()
  prepare_preview()V = Prepare_preview()
  setCamera(I)V = SetCamera(int)
  setPreviewDisplay(Landroid/view/SurfaceHolder;)V = SetPreviewDisplay(Android.Views.ISurfaceHolder)
  setPreviewTexture(Landroid/graphics/SurfaceTexture;)V = SetPreviewTexture(Android.Graphics.SurfaceTexture)
  setProjectionManager(Landroid/media/projection/MediaProjectionManager;)V = SetProjectionManager(Android.Media.Projection.MediaProjectionManager)
  setResultCodeData(ILandroid/content/Intent;)V = SetResultCodeData(int, Android.Content.Intent)
  setVideoEncoder(I)V = SetVideoEncoder(int)
  setVideoEncodingBitrate(I)V = SetVideoEncodingBitrate(int)
  setVideoFramerate(I)V = SetVideoFramerate(int)
  setVideoQuality(Lveg/mediacapture/sdk/streaming/video/VideoQuality;)V = SetVideoQuality(Veg.Mediacapture.Sdk.Streaming.Video.VideoQuality)
  setVideoSize(II)V = SetVideoSize(int, int)
  stop_preview()V = Stop_preview()
  TakeScreenshotImage()Landroid/media/Image; = TakeScreenshotImage()
veg/mediacapture/sdk/TranscodeVideo = Veg.Mediacapture.Sdk.TranscodeVideo
  <init>(Landroid/content/Context;Lveg/mediacapture/sdk/MediaCaptureConfig;Lveg/mediacapture/sdk/MediaCaptureCallback;)V = .ctor(Android.Content.Context, Veg.Mediacapture.Sdk.MediaCaptureConfig, Veg.Mediacapture.Sdk.IMediaCaptureCallback)
  LOG_LEVEL = LogLevel
  sdec_bb = SdecBb
  SDEC_BB_COUNT = SdecBbCount
  getFramesCount_in()I = FramesCount_in
  encode_frame(Lveg/mediacapture/sdk/streaming/mp4/VideoFrame;)V = Encode_frame(Veg.Mediacapture.Sdk.Streaming.Mp4.VideoFrame)
  filecopy(Ljava/io/File;Ljava/io/File;)V = Filecopy(Java.IO.File, Java.IO.File)
  is_started()Z = Is_started()
  pause()V = Pause()
  putFrame(Lveg/mediacapture/sdk/streaming/mp4/VideoFrame;)V = PutFrame(Veg.Mediacapture.Sdk.Streaming.Mp4.VideoFrame)
  putSPSPPS(Ljava/nio/ByteBuffer;)V = PutSPSPPS(Java.Nio.ByteBuffer)
  run()V = Run()
  SetCURBitrate(I)V = SetCURBitrate(int)
  SetImgFile(Ljava/lang/String;)V = SetImgFile(string)
  SetImgQuality(I)V = SetImgQuality(int)
  SetLRVBitrate(I)V = SetLRVBitrate(int)
  start(J)V = Start(long)
  stop()V = Stop()
